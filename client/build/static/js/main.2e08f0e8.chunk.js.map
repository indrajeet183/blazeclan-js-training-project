{"version":3,"sources":["component/maincontext.js","component/UI/layout/Base.jsx","component/Home.jsx","component/UI/ValidationMessage.jsx","component/UI/Input.jsx","services/manufacturer/index.js","services/product/index.js","component/UI/Select.jsx","component/UI/FileInput.js","component/product/Product.jsx","component/product/ProductContext.js","component/product/ProductDetails.jsx","store/actions/products.actions.js","store/actions/actions.js","component/product/ProductTableSaga.jsx","services/user/user.js","component/user/Registration.jsx","component/user/Login.jsx","services/category/category.js","component/UI/Table.jsx","component/UI/CategoryListGroup.jsx","component/category/CategoryInput.jsx","component/UI/Alert.jsx","component/category/Category.jsx","routes.js","App.js","reportWebVitals.js","store/reducers/product.reducer.js","store/reducers/reducers.js","store/sagas/product.saga.js","store/store.js","index.js"],"names":["MainContext","createContext","Base","props","useState","msg","type","toggeled","alert","setAlert","auth","sessionStorage","getItem","role","console","log","component","className","window","location","pathname","href","Provider","value","showAlert","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","children","Home","Component","ValidationMessage","isValid","message","Input","htmlFor","name","label","onChange","e","handleChange","ManufacturerService","getManufacturers","axios","get","baseUrl","headers","getManufacturerById","createManufacturer","manufacturer","post","updateManufacturer","put","deleteManufacturer","delete","this","ProductService","getProducts","getProductById","createProduct","formData","updateProduct","product","deleteProduct","Select","selected","changeSelect","target","disabled","data","map","row","_i","FileInput","multiple","files","Product","manufacturerService","productService","sku","manufacturer_id","price","weight","description","short_description","url","visibilty","setProduct","products","filteredProducts","setProducts","productImages","setProductImages","required","minLength","maxLength","error","notzero","validation","setValidation","manufacturers","setManufacturers","useEffect","a","manufacturersResp","success","productResp","productsResult","validate","tempObj","Object","keys","forEach","field","length","onSave","FormData","append","JSON","stringify","file","val","onClick","ProductContext","ProductDetails","selectedProduct","useContext","tabIndex","data-dismiss","product_images","data-ride","img","style","backgroundImage","image_path","backgroundSize","height","alt","data-slide","aria-hidden","GET_PRODUCTS","ADD_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","SEARCH_PRODUCT","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAILED","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILED","addProduct","payload","updatedData","searchProducts","keyword","searchText","productActions","TableHeader","columns","header","TableRow","isImg","src","onDetail","Table","dispatch","useDispatch","setSearchText","setSelectedProduct","productsState","useSelector","state","actions","placeholder","UserService","createUser","user","authUser","Registration","onInputChange","setState","onSelectChange","onButtonClear","tempValidationObj","first_name","last_name","middle_name","email","password","primary_mobile","onButtonSave","tempOb","group","response","responseType","responseMessage","tempValidation","isFormValid","push","includes","toggleAlert","show","alertToggeled","setTimeout","valid","Login","onButtonLogin","setItem","token","CategoryService","getCategories","getCategoryById","createCategory","category","updateCategory","deleteCategory","getSubCategories","getSubCategoryById","createSubCategory","subCategory","deleteSubCategory","updateSubCategory","ListGroup","list","cursor","onListSelect","category_id","colSpan","onDelete","isSub","onEdit","CategoryInput","componentDidUpdate","prevProps","selectedCategory","validateAll","selectedSubCategory","unique","checkIfUnique","filter","categoryResp","refreshData","parent_id","selectedParent","subCategoryResp","Category","componentDidMount","categoyResp","categories","subCategoyResp","subCategories","onCategorySelect","filteredCategories","subCat","onHandleEdit","updatedRow","onHandleDelete","deletedSubCategory","subClass","Alert","Routes","exact","path","ProductTable","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","selectedProducts","result","rootReducer","combineReducers","action","toLowerCase","sucess","record","dispatchGetProducts","listenGetProducts","dispatchAddProduct","listenAddProduct","productSaga","getProduct","call","takeLatest","all","parameterEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o2BAEaA,EAAcC,wBAAc,I,OCC5BC,EAAO,SAACC,GAAW,IAAD,EAEDC,mBAAS,CAAEC,IAAK,OAAQC,KAAM,UAAWC,UAAU,IAFlD,mBAEpBC,EAFoB,KAEbC,EAFa,KAcrBC,EAAOC,eAAeC,QAAQ,SAC9BC,EAAOF,eAAeC,QAAQ,QACpCE,QAAQC,IAAIL,EAAMG,GAElB,IAAIG,EAAY,sBAAKC,UAAU,aAAf,UACZ,mBAAGA,UAAS,UAAkC,MAA7BC,OAAOC,SAASC,SAAmB,kBAAoB,YAAcC,KAAK,IAA3F,kBACA,mBAAGJ,UAAS,UAAkC,YAA7BC,OAAOC,SAASC,SAAyB,kBAAoB,YAAcC,KAAK,UAAjG,0BACA,mBAAGJ,UAAS,UAAkC,WAA7BC,OAAOC,SAASC,SAAwB,kBAAoB,YAAcC,KAAK,SAAhG,mBACA,mBAAGJ,UAAS,UAAkC,cAA7BC,OAAOC,SAASC,SAA2B,kBAAoB,YAAcC,KAAK,YAAnG,yBAmBJ,OAhBIX,GAAiB,aAATG,IACRG,EAAY,sBAAKC,UAAU,aAAf,UACR,mBAAGA,UAAS,UAAkC,MAA7BC,OAAOC,SAASC,SAAmB,kBAAoB,YAAcC,KAAK,IAA3F,kBACA,mBAAGJ,UAAS,UAAkC,cAA7BC,OAAOC,SAASC,SAA2B,kBAAoB,YAAcC,KAAK,YAAnG,0BAIJX,GAAiB,UAATG,IACRG,EAAY,sBAAKC,UAAU,aAAf,UACR,mBAAGA,UAAS,UAAkC,MAA7BC,OAAOC,SAASC,SAAmB,kBAAoB,YAAcC,KAAK,IAA3F,kBACA,mBAAGJ,UAAS,UAAkC,cAA7BC,OAAOC,SAASC,SAA2B,kBAAoB,YAAcC,KAAK,YAAnG,sBACA,mBAAGJ,UAAS,UAAkC,aAA7BC,OAAOC,SAASC,SAA0B,kBAAoB,YAAcC,KAAK,WAAlG,4BACA,mBAAGJ,UAAS,UAAkC,cAA7BC,OAAOC,SAASC,SAA2B,kBAAoB,YAAcC,KAAK,YAAnG,0BAKJ,cAACrB,EAAYsB,SAAb,CAAsBC,MAAO,CAAEC,UAhCjB,SAAChB,GACfC,EAASD,KA+BT,SACI,sBAAKS,UAAU,sBAAf,UACI,sBAAKA,UAAU,8CAAf,UACI,wBAAQA,UAAU,iBAAiBX,KAAK,SAASmB,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,oBAA9K,SACI,sBAAMZ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2Ba,GAAG,qBAA7C,SACKd,OAGT,qBAAKC,UAAU,kBAAf,SACKd,EAAM4B,WAGX,qBAAKd,UAAW,eAAiBT,EAAMF,MAAQE,EAAMD,SAAW,GAAK,WAAYM,KAAK,QAAtF,SACKL,EAAMH,Y,gCC7CZ2B,E,4JAZX,WACI,OACI,qBAAKf,UAAU,4BAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,uBACA,mBAAGA,UAAU,OAAb,oE,GANDgB,a,sDCSJC,EATW,SAAC/B,GAEvB,OACI,qBAAKc,UAAS,UAAKd,EAAMgC,QAAU,kBAAoB,UAAvD,SACKhC,EAAMiC,WCHNC,EAAQ,SAAClC,GAClB,OAAQ,sBAAKc,UAAU,aAAf,UACJ,uBAAOqB,QAASnC,EAAMoC,KAAtB,SAA6BpC,EAAMqC,QACnC,uBAAOvB,UAAU,eAAeM,MAAOpB,EAAMoB,MAAOjB,KAAMH,EAAMG,KAAMiC,KAAMpC,EAAMoC,KAAME,SAAU,SAACC,GAAD,OAAOvC,EAAMwC,aAAaD,MAC5H,cAAC,EAAD,CAAmBP,QAAShC,EAAMgC,QAASC,QAASjC,EAAME,U,gBC0CnDuC,EA7CX,aAAe,IAAD,gCAIdC,iBAAmB,WACf,OAAOC,IAAMC,IAAN,UAAa,EAAKC,QAAlB,iBAA0C,CAC7CC,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAPtC,KAYdsC,oBAAsB,SAACpB,GACnB,OAAOgB,IAAMC,IAAN,UAAa,EAAKC,QAAlB,yBAA0ClB,GAAM,CACnDmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAftC,KAoBduC,mBAAqB,SAACC,GAClB,OAAON,IAAMO,KAAN,UAAc,EAAKL,QAAnB,iBAA2CI,EAAc,CAC5DH,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAvBtC,KA4Bd0C,mBAAqB,SAACF,GAClB,OAAON,IAAMS,IAAN,UAAa,EAAKP,QAAlB,yBAA0CI,EAAatB,IAAMsB,EAAc,CAC9EH,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aA/BtC,KAoCd4C,mBAAqB,SAAC1B,GAClB,OAAOgB,IAAMW,OAAN,UAAgB,EAAKT,QAArB,yBAA6ClB,GAAM,CACtDmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAtChD8C,KAAKV,QAAU,yBC6CRW,EA9CX,aAAe,IAAD,gCAIdC,YAAc,WACV,OAAOd,IAAMC,IAAN,UAAa,EAAKC,QAAlB,YAAqC,CACxCC,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAPtC,KAYdiD,eAAiB,SAAC/B,GACd,OAAOgB,IAAMC,IAAN,UAAa,EAAKC,QAAlB,oBAAqClB,GAAM,CAC9CmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAftC,KAoBdkD,cAAgB,SAACC,GACb,OAAOjB,IAAMO,KAAN,UAAc,EAAKL,QAAnB,YAAsCe,EAAU,CACnDd,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,SACxC,eAAgB,0BAxBd,KA6BdoD,cAAgB,SAACC,GACb,OAAOnB,IAAMS,IAAN,UAAa,EAAKP,QAAlB,oBAAqCiB,EAAQnC,IAAMmC,EAAS,CAC/DhB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAhCtC,KAqCdsD,cAAgB,SAACpC,GACb,OAAOgB,IAAMW,OAAN,UAAgB,EAAKT,QAArB,oBAAwClB,GAAM,CACjDmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAvChD8C,KAAKV,QAAU,yBCaRmB,EAfA,SAAChE,GACZ,OACI,sBAAKc,UAAU,aAAf,UACI,uBAAOqB,QAASnC,EAAMoC,KAAtB,SAA6BpC,EAAMqC,QACnC,yBAAQvB,UAAU,eAAesB,KAAMpC,EAAMoC,KAAMhB,MAAOpB,EAAMiE,SAAU3B,SAAU,SAACC,GAAD,OAAOvC,EAAMkE,aAAa3B,EAAE4B,OAAO/C,QAAvH,UACI,wBAAQA,MAAM,GAAGgD,UAAQ,EAAzB,oBAEIpE,EAAMqE,KAAKC,KAAI,SAACC,EAAKC,GAAN,OAAa,wBAAoCpD,MAAOmD,EAAI5C,GAA/C,SAAoD4C,EAAInC,MAAxD,UAAgBpC,EAAMoC,KAAtB,YAA8BoC,UAGlE,cAAC,EAAD,CAAmBxC,QAAShC,EAAMgC,QAASC,QAASjC,EAAME,UCEvDuE,EAfG,SAACzE,GACf,OACI,sBAAKc,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAmBa,GAAG,wBAAtC,sBAEJ,sBAAKb,UAAU,cAAf,UACI,uBAAOX,KAAK,OAAOW,UAAU,oBAAoB4D,UAAQ,EAAC/C,GAAG,mBACzDW,SAAU,SAACC,GAAQvC,EAAMwC,aAAaD,EAAE4B,OAAOQ,UACnD,uBAAO7D,UAAU,oBAAoBqB,QAAQ,mBAA7C,gCCuKDyC,EAzKC,WACZ,IAAMC,EAAsB,IAAIpC,EAC1BqC,EAAiB,IAAItB,EAFT,EAIYvD,mBAAS,CACnCmC,KAAM,GACN2C,IAAK,GACLC,gBAAiB,GACjBC,MAAO,EACPC,OAAQ,EACRC,YAAa,GACbC,kBAAmB,GACnBC,IAAK,GACLC,UAAW,IAbG,mBAIXxB,EAJW,KAIFyB,EAJE,OAgBctF,mBAAS,CAAEuF,SAAU,GAAIC,iBAAkB,KAhBzD,mBAgBDC,GAhBC,aAiBkBzF,mBAAS,IAjB3B,gCAmBwBA,mBAAS,KAnBjC,mBAmBX0F,EAnBW,KAmBIC,EAnBJ,OAoB4B3F,mBAAS,IApBrC,gCAsBkBA,mBAAS,CACzCmC,KAAM,CAAEyD,UAAU,EAAMC,UAAW,EAAGC,UAAW,GAAIC,OAAO,EAAM9F,IAAK,sBACvE6E,IAAK,CAAEc,UAAU,EAAMC,UAAW,EAAGC,UAAW,GAAIC,OAAO,EAAM9F,IAAK,sBACtE8E,gBAAiB,CAAEa,UAAU,EAAMG,OAAO,EAAM9F,IAAK,sBACrD+E,MAAO,CAAEY,UAAU,EAAMI,SAAS,EAAMD,OAAO,EAAM9F,IAAK,sBAC1DgF,OAAQ,CAAEW,UAAU,EAAMI,SAAS,EAAMD,OAAO,EAAM9F,IAAK,sBAC3DiF,YAAa,CAAEU,UAAU,EAAMC,UAAW,EAAGC,UAAW,IAAMC,OAAO,EAAM9F,IAAK,sBAChFkF,kBAAmB,CAAES,UAAU,EAAMC,UAAW,EAAGC,UAAW,IAAKC,OAAO,EAAM9F,IAAK,sBACrFmF,IAAK,CAAEQ,UAAU,EAAMC,UAAW,EAAGC,UAAW,GAAIC,OAAO,EAAM9F,IAAK,sBACtEoF,UAAW,CAAEO,UAAU,EAAMG,OAAO,EAAM9F,IAAK,yBA/BjC,mBAsBXgG,EAtBW,KAsBCC,EAtBD,OAkCwBlG,mBAAS,IAlCjC,mBAkCXmG,EAlCW,KAkCIC,EAlCJ,KAuClBC,oBAAS,sBAAC,gCAAAC,EAAA,sEAC0B1B,EAAoBnC,mBAD9C,cACA8D,EADA,QAEgBnC,KAAKoC,SAEvBJ,EAAiB,YAAIG,EAAkBnC,KAAKA,OAJ1C,SAQoBS,EAAerB,cARnC,QAQAiD,EARA,QASUrC,KAAKoC,UAEXE,EAFoB,YAECD,EAAYrC,KAAKA,MAC5CqB,EAAY,CAAEF,SAAUmB,EAAgBlB,iBAAkBkB,KAZxD,2CAkBP,IAEHL,qBAAU,WACNM,MACD,CAAC9C,IAEJ,IAAM8C,EAAW,WACb,IAAIC,EAAO,eAAQX,GACnBY,OAAOC,KAAKF,GAASG,SAAQ,SAACC,GAItBJ,EAFAA,EAAQI,GAAOpB,UAAsC,IAA1B/B,EAAQmD,GAAOC,OAEnC,2BACAL,GADA,kBAEFI,EAFE,2BAGIJ,EAAQI,IAHZ,IAICjB,OAAO,EACP9F,IAAK,8BAGL4D,EAAQmD,GAAOC,OAASL,EAAQI,GAAOnB,aAAgBhC,EAAQmD,GAAOC,OAASL,EAAQI,GAAOlB,WAC/F,2BACAc,GADA,kBAEFI,EAFE,2BAGIJ,EAAQI,IAHZ,IAICjB,OAAO,EACP9F,IAAI,wCAAD,OAA0C2G,EAAQI,GAAOnB,UAAzD,0BAAoFe,EAAQI,GAAOlB,eAGvGc,EAAQI,GAAOhB,SAAWnC,EAAQmD,IAAU,EAE5C,2BACAJ,GADA,kBAEFI,EAFE,2BAGIJ,EAAQI,IAHZ,IAICjB,OAAO,EACP9F,IAAK,gCAKN,2BACA2G,GADA,kBAEFI,EAFE,2BAGIJ,EAAQI,IAHZ,IAICjB,OAAO,EACP9F,IAAK,UAKrBiG,EAAcU,IAGZM,EAAM,uCAAG,4BAAAZ,EAAA,6DACL3C,EAAW,IAAIwD,UACZC,OAAO,eAAgBC,KAAKC,UAAUzD,IAC/CgD,OAAOC,KAAKpB,GAAeqB,SAAQ,SAAAQ,GAAI,OAAI5D,EAASyD,OAAO,iBAAkB1B,EAAc6B,OAHhF,SAIL1C,EAAenB,cAAcC,GAJxB,2CAAH,qDAOZ,OACI,qBAAK9C,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,EAAD,CAAOuB,MAAM,OAAOD,KAAK,OAAOhB,MAAO0C,EAAQ1B,KAAMjC,KAAK,OACtD6B,QAASkE,EAAW9D,KAAK4D,MACzB9F,IAAKgG,EAAW9D,KAAKlC,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAe1B,KAAMG,EAAE4B,OAAO/C,YAE7F,cAAC,EAAD,CAAOiB,MAAM,MAAMD,KAAK,MAAMhB,MAAO0C,EAAQiB,IAAK5E,KAAK,OACnD6B,QAASkE,EAAWnB,IAAIiB,MACxB9F,IAAKgG,EAAWnB,IAAI7E,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAeiB,IAAKxC,EAAE4B,OAAO/C,YAE3F,cAAC,EAAD,CAAOiB,MAAM,MAAMD,KAAK,MAAMhB,MAAO0C,EAAQuB,IAAKlF,KAAK,OACnD6B,QAASkE,EAAWb,IAAIW,MACxB9F,IAAKgG,EAAWb,IAAInF,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAeuB,IAAK9C,EAAE4B,OAAO/C,YAE3F,cAAC,EAAD,CAAQgB,KAAK,kBAAkBC,MAAM,cAAcgC,KAAM+B,EACrDlC,aArGO,SAACvC,GAC5B4D,EAAW,2BAAKzB,GAAN,IAAekB,gBAAiBrD,MAoGgBsC,SAAUH,EAAQkB,gBACxDhD,QAASkE,EAAWlB,gBAAgBgB,MAAO9F,IAAKgG,EAAWlB,gBAAgB9E,MAE/E,cAAC,EAAD,CAAOmC,MAAM,QAAQD,KAAK,QAAQhB,MAAO0C,EAAQmB,MAAO9E,KAAK,SACzD6B,QAASkE,EAAWjB,MAAMe,MAC1B9F,IAAKgG,EAAWjB,MAAM/E,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAemB,MAAO1C,EAAE4B,OAAO/C,YAE/F,cAAC,EAAD,CAAOiB,MAAM,SAASD,KAAK,SAAShB,MAAO0C,EAAQoB,OAAQ/E,KAAK,SAC5D6B,QAASkE,EAAWhB,OAAOc,MAC3B9F,IAAKgG,EAAWhB,OAAOhF,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAeoB,OAAQ3C,EAAE4B,OAAO/C,YAEjG,cAAC,EAAD,CAAOiB,MAAM,cAAcD,KAAK,cAAchB,MAAO0C,EAAQqB,YAAahF,KAAK,OAC3E6B,QAASkE,EAAWf,YAAYa,MAChC9F,IAAKgG,EAAWf,YAAYjF,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAeqB,YAAa5C,EAAE4B,OAAO/C,YAE3G,cAAC,EAAD,CAAOiB,MAAM,oBAAoBD,KAAK,oBAAoBhB,MAAO0C,EAAQsB,kBAAmBjF,KAAK,OAC7F6B,QAASkE,EAAWd,kBAAkBY,MACtC9F,IAAKgG,EAAWd,kBAAkBlF,IAAKsC,aAAc,SAACD,GAAQgD,EAAW,2BAAKzB,GAAN,IAAesB,kBAAmB7C,EAAE4B,OAAO/C,YAEvH,cAAC,EAAD,CAAQgB,KAAK,UAAUC,MAAM,aAAagC,KAAM,CAAC,CAAE1C,GAAI,EAAGS,KAAM,WAAa,CAAET,GAAI,EAAGS,KAAM,WACxF8B,aAAc,SAACuD,GAAUlC,EAAW,2BAAKzB,GAAN,IAAewB,UAAWmC,MAAUxD,SAAUH,EAAQwB,UACzFtD,QAASkE,EAAWZ,UAAUU,MAAO9F,IAAKgG,EAAWZ,UAAUpF,MAEnE,cAAC,EAAD,CAAWsC,aAAcoD,IACzB,wBAAQ9E,UAAU,kBAAkB4G,QAASP,EAA7C,kBACA,wBAAQrG,UAAU,uBAAlB,6BCtKX6G,EAAiB7H,wBAAc,MCyD7B8H,EAxDQ,WACnB,IAEQC,EAFeC,qBAAWH,GAE1BE,gBAGR,OACI,qBAAK/G,UAAU,aAAaa,GAAG,aAAaoG,SAAS,KAArD,SACI,qBAAKjH,UAAU,eAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAca,GAAG,oBAA/B,6BACA,wBAAQxB,KAAK,SAASW,UAAU,QAAQkH,eAAa,QAArD,SACI,6CAGR,qBAAKlH,UAAU,aAAf,SACI,sBAAKA,UAAU,OAAf,WAES+G,EAAgBI,gBAAkBJ,EAAgBI,eAAef,QAAU,EAAI,sBAAKvF,GAAG,0BAA0Bb,UAAU,iBAAiBoH,YAAU,WAAvE,UAC5E,qBAAKpH,UAAU,iBAAf,SAEQ+G,EAAgBI,eAAe3D,KAAI,SAAC6D,EAAK3D,GAAN,OAC/B,qBAAsC1D,UAAkB,IAAP0D,EAAW,uBAAyB,gBAArF,SACI,qBAAK4D,MAAO,CAAEC,gBAAgB,OAAD,OAAS,yBAA2BF,EAAIG,WAAxC,KAAuDC,eAAgB,QAASC,OAAQ,SAEjH1H,UAAU,QAAQ2H,IAAKN,EAAI/F,QAHzB,sBAAwBoC,QAQ9C,oBAAG1D,UAAU,wBAAwBI,KAAK,2BAA2BR,KAAK,SAASgI,aAAW,OAA9F,UACI,sBAAM5H,UAAU,6BAA6B6H,cAAY,SACzD,sBAAM7H,UAAU,UAAhB,yBAEJ,oBAAGA,UAAU,wBAAwBI,KAAK,2BAA2BR,KAAK,SAASgI,aAAW,OAA9F,UACI,sBAAM5H,UAAU,6BAA6B6H,cAAY,SACzD,sBAAM7H,UAAU,UAAhB,wBAEC,GAEb,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA2B,iCAAS+G,EAAgBzF,SACpD,mBAAGtB,UAAU,YAAb,SAA0B+G,EAAgB1C,cAC1C,oBAAGrE,UAAU,YAAb,qBAAkC+G,EAAgB5C,MAAlD,QACA,oBAAGnE,UAAU,YAAb,mBAAgC+G,EAAgB9C,uB,QChDnE6D,EAAe,eACfC,EAAc,cACdC,EAAiB,kBACjBC,EAAiB,kBACjBC,EAAiB,iBACjBC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAqB,qBAGrB3F,EAAc,WACvB,MAAO,CACHtD,KAAMyI,IAKDS,EAAa,SAAChF,GACvB,MAAO,CACHlE,KAAM0I,EACNS,QAASjF,IAKJR,EAAgB,SAAC0F,EAAa5H,GACvC,MAAO,CACHxB,KAAM2I,EACNnH,KACA2H,QAASC,IAKJxF,EAAgB,SAACpC,GAC1B,MAAO,CACHxB,KAAM4I,EACNpH,OAIK6H,EAAiB,SAACC,GAC3B,MAAO,CACHtJ,KAAM6I,EACNU,WAAYD,IC3CL,iBACRE,GCKDC,EAAc,SAAC5J,GACjB,OACI,gCACI,+BACKA,EAAM6J,QAAQvF,KAAI,SAACwF,EAAQtF,GACxB,GAAiC,kBAAtBxE,EAAMuE,IAAIuF,GACjB,OAAO,6BAAuCA,GAAvC,UAAY,cAAgBA,OAG3C,uCACA,8CAMVC,EAAW,SAAC/J,GACd,OACI,+BACKA,EAAM6J,QAAQvF,KAAI,SAAC2C,EAAOzC,GACvB,GAAgC,kBAArBxE,EAAMuE,IAAI0C,GACjB,OAAO,6BAAsCjH,EAAMuE,IAAI0C,IAAhD,UAAY,cAAgBA,OAG1CtG,QAAQC,IAAIZ,EAAMuE,KACjBvE,EAAMgK,MAAS,6BAAI,qBAAKlJ,UAAU,oBAAoBmJ,IAAMjK,EAAMuE,IAAIvE,EAAMgK,OAAO9C,OAAS,yBAA2BlH,EAAMuE,IAAIvE,EAAMgK,OAAO,GAAvB,WAA0C,GAAKvB,IAAI,eAAqB,GACjM,6BAAI,wBAAQtI,KAAK,SAASW,UAAU,kBAAkBQ,cAAY,QAAQC,cAAY,cAAcmG,QAAS,WAAQ1H,EAAMkK,SAASlK,EAAMuE,MAAtI,sCA+DD4F,EAxDD,WACV,IAAIC,EAAWC,cADC,EAIoBpK,mBAAS,IAJ7B,mBAITyJ,EAJS,KAIGY,EAJH,OAK8BrK,mBAAS,IALvC,mBAKT4H,EALS,KAKQ0C,EALR,KAOZC,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMlF,YAI/Cc,qBAAU,WACN8D,EAASO,EAAQlH,iBAClB,IAGH,IAOI5C,EAFE4C,EAAc+G,EAAc/E,iBAAiByB,OAASsD,EAAc/E,iBAAmB+E,EAAchF,SAG3G,GAAI/B,GAAeA,EAAYyD,OAAQ,CACnC,IAAIpE,EAAUgE,OAAOC,KAAKtD,EAAY,IAEtC5C,EAAa,wBAAOC,UAAW,QAAlB,UACT,cAAC,EAAD,CAAa+I,QAAS/G,EAASyB,IAAKd,EAAY,KAChD,gCACKA,EAAYa,KAAI,SAACC,EAAKC,GAAN,OAAa,cAAC,EAAD,CAAU0F,SAAUK,EAAoBV,QAAS/G,EAC3EyB,IAAKA,EAAKyF,MAAO,kBADS,UAAkE,aAAexF,iBAOvH3D,EAAY,8BAAK,oEAGrB,OACI,gCACI,qBAAKC,UAAU,aAAf,SACI,uBAAOX,KAAK,OAAOW,UAAU,eAAe8J,YAAY,iBACpDtI,SAAU,SAACC,GAAD,OA5BFkF,EA4BwBlF,EAAE4B,OAAO/C,MA3BrDkJ,EAAc7C,QACd2C,EAASO,EAAQnB,eAAe/B,IAFb,IAACA,GA6BRrG,MAAOsI,MAGb7I,EACF,cAAC8G,EAAexG,SAAhB,CAAyBC,MAAO,CAAEiD,KAAMZ,EAAa8G,qBAAoB1C,mBAAzE,SACI,cAAC,EAAD,UC3EDgD,GAbX,aAAe,IAAD,gCAIdC,WAAa,SAACC,GACV,OAAOpI,IAAMO,KAAN,UAAc,EAAKL,QAAnB,gBAA0CkI,IALvC,KAQdC,SAAW,SAACD,GACR,OAAOpI,IAAMO,KAAN,UAAc,EAAKL,QAAnB,eAAyCkI,IARhDxH,KAAKV,QAAU,yBCgNRoI,G,kDA7MX,aAAe,IAAD,8BACV,gBAsEJC,cAAgB,SAAC3I,GACb,EAAK4I,SAAL,eAAiB5I,EAAE4B,OAAO/B,KAAOG,EAAE4B,OAAO/C,QAC1C,EAAKwF,SAASrE,EAAE4B,OAAO/B,KAAMG,EAAE4B,OAAO/C,QAzE5B,EA4EdgK,eAAiB,SAAChJ,EAAMhB,GACpB,EAAK+J,SAAL,eAAiB/I,EAAOhB,IACxB,EAAKwF,SAASxE,EAAMhB,IA9EV,EAiFdiK,cAAgB,SAAC9I,GACb,IAAI+I,EAAiB,eAAQ,EAAKZ,MAAMxE,YAExCY,OAAOC,KAAKuE,GAAmBtE,SAAQ,SAACC,GAChCqE,EAAkBrE,GAAOpB,UACzByF,EAAkBrE,GAAOjB,OAAQ,EACjCsF,EAAkBrE,GAAO/G,IAAM,sBAE/BoL,EAAkBrE,GAAO/G,IAAM,MAIvC,EAAKiL,SAAS,CACVI,WAAY,GACZC,UAAW,GACXC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,eAAgB,GAChBhF,SAAU0E,KApGJ,EAwGdO,aAxGc,sBAwGC,8BAAAtF,EAAA,6DACLuF,EAAS,CACXP,WAAY,EAAKb,MAAMa,WACvBC,UAAW,EAAKd,MAAMc,UACtBC,YAAa,EAAKf,MAAMe,YACxBC,MAAO,EAAKhB,MAAMgB,MAClBC,SAAU,EAAKjB,MAAMiB,SACrBC,eAAgB,EAAKlB,MAAMkB,eAC3BG,MAAO,EAAKrB,MAAMqB,OARX,SAWY,EAAKlB,YAAYC,WAAWgB,GAXxC,QAWLE,EAXK,QAYE3H,KAAKoC,QACd,EAAK0E,SAAS,CAAEc,aAAc,UAAWC,gBAAiBF,EAAS3H,KAAKnE,MAExE,EAAKiL,SAAS,CAAEc,aAAc,SAAUC,gBAAiBF,EAAS3H,KAAKnE,MAfhE,2CAxGD,EA2Hd0G,SAAW,SAACK,EAAO7F,GACf,IAAM+K,EAAiB,EAAKzB,MAAMxE,WAE9BiG,EAAelF,GAAOpB,UAA6B,IAAjBzE,EAAM8F,OACxC,EAAKiE,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAK,gCAITkB,EAAM8F,OAASiF,EAAelF,GAAOnB,aAAgB1E,EAAM8F,OAASiF,EAAelF,GAAOlB,WAClG,EAAKoF,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAI,wCAAD,OAA0CiM,EAAelF,GAAOnB,UAAhE,0BAA2FqG,EAAelF,GAAOlB,iBAKhI,EAAKoF,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAI,UA3JV,EAmKdkM,YAAc,WACV,IAAId,EAAiB,eAAQ,EAAKZ,MAAMxE,YACpClE,EAAU,GAMd,OALA8E,OAAOC,KAAKuE,GAAmBtE,SAAQ,SAACC,GACpCjF,EAAQqK,KAAKf,EAAkBrE,GAAOjB,UAG1CrF,QAAQC,IAAIoB,GACLA,EAAQsK,UAAS,IA3Kd,EA8KdC,YAAc,SAACC,GACX,EAAKrB,SAAS,CAAEsB,cAAeD,IAC/BE,YAAW,WACP,EAAKvB,SAAS,CAAEsB,eAAe,MAChC,OAhLH,EAAK/B,MAAQ,CACTa,WAAY,GACZC,UAAW,GACXC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,eAAgB,GAChBG,MAAO,UACP7F,WAAY,CACRqF,WAAY,CACR1F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,sBAETsL,UAAW,CACP3F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,sBAETuL,YAAa,CACT5F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,IAETwL,MAAO,CACH7F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,sBAETyL,SAAU,CACN9F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,sBAET0L,eAAgB,CACZ/F,UAAU,EACVC,UAAW,GACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,sBAET6L,MAAO,CACHlG,UAAU,EACVG,OAAO,EACP9F,IAAK,uBAGbyM,OAAO,EACPV,aAAc,GACdC,gBAAiB,GACjBO,eAAe,GAEnB,EAAK5B,YAAc,IAAIA,GACvB,EAAKkB,MAAQ,CACT,CAAEpK,GAAI,IAAKS,KAAM,YACjB,CAAET,GAAI,IAAKS,KAAM,WAnEX,E,0CAqLd,WAAU,IAAD,OACL,OAAQ,sBAAKtB,UAAU,YAAf,UACJ,cAAC,EAAD,CAAOuB,MAAM,aAAaD,KAAK,aAAahB,MAAOmC,KAAKmH,MAAMa,WAC1DpL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWqF,WAAWvF,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWqF,WAAWrL,IAAKsC,aAAce,KAAK2H,gBAC/H,cAAC,EAAD,CAAO7I,MAAM,YAAYD,KAAK,YAAYhB,MAAOmC,KAAKmH,MAAMc,UACxDrL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWsF,UAAUxF,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWsF,UAAUtL,IAAKsC,aAAce,KAAK2H,gBAC7H,cAAC,EAAD,CAAO7I,MAAM,wBAAwBD,KAAK,cAAchB,MAAOmC,KAAKmH,MAAMe,YACtEtL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWuF,YAAYzF,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWuF,YAAYvL,IAAKsC,aAAce,KAAK2H,gBACjI,cAAC,EAAD,CAAO7I,MAAM,QAAQD,KAAK,QAAQhB,MAAOmC,KAAKmH,MAAMgB,MAChDvL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWwF,MAAM1F,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWwF,MAAMxL,IAAKsC,aAAce,KAAK2H,gBACrH,cAAC,EAAD,CAAO7I,MAAM,WAAWD,KAAK,WAAWhB,MAAOmC,KAAKmH,MAAMiB,SACtDxL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWyF,SAAS3F,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWyF,SAASzL,IAAKsC,aAAce,KAAK2H,gBAC3H,cAAC,EAAD,CAAO7I,MAAM,iBAAiBD,KAAK,iBAAiBhB,MAAOmC,KAAKmH,MAAMkB,eAClEzL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAW0F,eAAe5F,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAW0F,eAAe1L,IAAKsC,aAAce,KAAK2H,gBACvI,cAAC,EAAD,CAAQ9I,KAAK,QAAQC,MAAM,aAAagC,KAAMd,KAAKwI,MAC/C7H,aAAc,SAACuD,GAAD,OAAS,EAAK2D,eAAe,QAAS3D,IAAMxD,SAAUV,KAAKmH,MAAMqB,MAC/E/J,QAASuB,KAAKmH,MAAMxE,WAAW6F,MAAM/F,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAW6F,MAAM7L,MAEjF,wBAAQY,UAAU,uBAAuB4G,QAASnE,KAAKsI,aAAczH,SAAUb,KAAK6I,cAApF,kBACA,wBAAQtL,UAAU,kBAAkB4G,QAASnE,KAAK8H,cAAlD,0B,GA1MevJ,aC6GZ8K,G,kDA7GX,aAAe,IAAD,8BACV,gBA0BJ1B,cAAgB,SAAC3I,GACb,EAAK4I,SAAL,eAAiB5I,EAAE4B,OAAO/B,KAAOG,EAAE4B,OAAO/C,QAC1C,EAAKwF,SAASrE,EAAE4B,OAAO/B,KAAMG,EAAE4B,OAAO/C,QA7B5B,EAgCdyL,cAhCc,sBAgCE,8BAAAtG,EAAA,6DACNuF,EAAS,CACXJ,MAAO,EAAKhB,MAAMgB,MAClBC,SAAU,EAAKjB,MAAMiB,UAHb,SAMW,EAAKd,YAAYG,SAASc,GANrC,OAMNE,EANM,OAOZrL,QAAQC,IAAIoL,EAAS3H,MACjB2H,EAAS3H,KAAKoC,UACdjG,eAAesM,QAAQ,QAASd,EAAS3H,KAAK0I,OAC9CvM,eAAesM,QAAQ,OAAQd,EAAS3H,KAAK3D,OAVrC,2CAhCF,EAgDdkG,SAAW,SAACK,EAAO7F,GACf,IAAM+K,EAAiB,EAAKzB,MAAMxE,WAE9BiG,EAAelF,GAAOpB,UAA6B,IAAjBzE,EAAM8F,OACxC,EAAKiE,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAK,gCAITkB,EAAM8F,OAASiF,EAAelF,GAAOnB,aAAgB1E,EAAM8F,OAASiF,EAAelF,GAAOlB,WAClG,EAAKoF,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAI,wCAAD,OAA0CiM,EAAelF,GAAOnB,UAAhE,0BAA2FqG,EAAelF,GAAOlB,iBAKhI,EAAKoF,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAI,UAhFV,EAyFdkM,YAAc,WACV,IAAId,EAAiB,eAAQ,EAAKZ,MAAMxE,YACpClE,EAAU,GAId,OAHA8E,OAAOC,KAAKuE,GAAmBtE,SAAQ,SAACC,GACpCjF,EAAQqK,KAAKf,EAAkBrE,GAAOjB,UAEnChE,EAAQsK,UAAS,IA7FxB,EAAK5B,MAAQ,CACTgB,MAAO,GACPC,SAAU,GACVzF,WAAY,CACRwF,MAAO,CACH7F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,sBAETyL,SAAU,CACN9F,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,uBAGbyM,OAAO,GAEX,EAAK9B,YAAc,IAAIA,GAvBb,E,0CAkGd,WACI,OAAQ,sBAAK/J,UAAU,YAAf,UACJ,cAAC,EAAD,CAAOuB,MAAM,QAAQD,KAAK,QAAQhB,MAAOmC,KAAKmH,MAAMgB,MAChDvL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWwF,MAAM1F,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWwF,MAAMxL,IAAKsC,aAAce,KAAK2H,gBACrH,cAAC,EAAD,CAAO7I,MAAM,WAAWD,KAAK,WAAWhB,MAAOmC,KAAKmH,MAAMiB,SACtDxL,KAAK,OAAO6B,QAASuB,KAAKmH,MAAMxE,WAAWyF,SAAS3F,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAWyF,SAASzL,IAAKsC,aAAce,KAAK2H,gBAC3H,wBAAQpK,UAAU,uBAAuB4G,QAASnE,KAAKsJ,cAAezI,SAAUb,KAAK6I,cAArF,0B,GAzGQtK,aCqFLkL,GArFX,aAAe,IAAD,gCAIdC,cAAgB,WACZ,OAAOtK,IAAMC,IAAN,UAAa,EAAKC,QAAlB,aAAsC,CACzCC,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAPtC,KAYdyM,gBAAkB,SAACvL,GACf,OAAOgB,IAAMC,IAAN,UAAa,EAAKC,QAAlB,qBAAsClB,GAAM,CAC/CmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAftC,KAoBd0M,eAAiB,SAACC,GACd,OAAOzK,IAAMO,KAAN,UAAc,EAAKL,QAAnB,aAAuCuK,EAAU,CACpDtK,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAvBtC,KA4Bd4M,eAAiB,SAACD,GACd,OAAOzK,IAAMS,IAAN,UAAa,EAAKP,QAAlB,qBAAsCuK,EAASzL,IAAMyL,EAAU,CAClEtK,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aA/BtC,KAoCd6M,eAAiB,SAAC3L,GACd,OAAOgB,IAAMW,OAAN,UAAgB,EAAKT,QAArB,qBAAyClB,GAAM,CAClDmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAvCtC,KA4Cd8M,iBAAmB,WACf,OAAO5K,IAAMC,IAAN,UAAa,EAAKC,QAAlB,iBAA0C,CAC7CC,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aA/CtC,KAoDd+M,mBAAqB,SAAC7L,GAClB,OAAOgB,IAAMC,IAAN,UAAa,EAAKC,QAAlB,yBAA0ClB,GAAM,CACnDmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAvDtC,KA4DdgN,kBAAoB,SAACC,GACjB,OAAO/K,IAAMO,KAAN,UAAc,EAAKL,QAAnB,iBAA2C6K,EAAa,CAC3D5K,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aA/DtC,KAoEdkN,kBAAoB,SAAChM,GACjB,OAAOgB,IAAMW,OAAN,UAAgB,EAAKT,QAArB,yBAA6ClB,GAAM,CACtDmB,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aAvEtC,KA4EdmN,kBAAoB,SAACF,GACjB,OAAO/K,IAAMS,IAAN,UAAa,EAAKP,QAAlB,yBAA0C6K,EAAY/L,IAAM+L,EAAa,CAC5E5K,QAAS,CACL,cAAiBtC,eAAeC,QAAQ,aA9EhD8C,KAAKV,QAAU,yBCHjB+G,G,4JACF,WAAU,IAAD,OACL,OACI,gCACI,6BACKrG,KAAKvD,MAAM6J,QAAQvF,KAAI,SAACwF,EAAQtF,GAC7B,GAAsC,kBAA3B,EAAKxE,MAAMuE,IAAIuF,GACtB,OAAO,6BAAuCA,GAAvC,UAAY,cAAgBA,e,GAPrChI,aAgBpBiI,G,4JACF,WAAU,IAAD,OACL,OACI,+BACKxG,KAAKvD,MAAM6J,QAAQvF,KAAI,SAAC2C,EAAOzC,GAC5B,GAAqC,kBAA1B,EAAKxE,MAAMuE,IAAI0C,GACtB,OAAO,6BAAsC,EAAKjH,MAAMuE,IAAI0C,IAArD,UAAY,cAAgBA,OAG1C1D,KAAKvD,MAAMgK,MAAQ,6BAAI,qBAAKlJ,UAAU,oBAAoBmJ,IAAK,0BAA4B1G,KAAKvD,MAAMuE,IAAIhB,KAAKvD,MAAMgK,OAAO9C,OAAS3D,KAAKvD,MAAMuE,IAAIhB,KAAKvD,MAAMgK,OAAO,GAAjC,WAAoD,QAAe,U,GATlMlI,aChBV+L,ID+BO/L,YC/BK,SAAC9B,GACtB,OAAQ,uBAAOc,UAAU,2BAAjB,SACJ,gCAEQd,EAAMqE,KAAKC,KAAI,SAACwJ,EAAMtJ,GAAP,OAAc,qBACzB1D,UAA4B,SAAjBd,EAAM+N,OAAoB,6BAA+B,GAD3C,UAGzB,+CAA0B,SAAjB/N,EAAM+N,OAAoB,CAAErG,QAAS,kBAAM1H,EAAMgO,aAAaF,EAAKnM,MAAQ,IAApF,cAA0FmM,EAAKnM,GAA/F,QACA,6BAAKmM,EAAKG,cACV,6BAAKH,EAAK1L,OACV,oBAAI8L,QAAQ,IAAZ,SAAgB,wBAAQpN,UAAU,oBAAoB4G,QAAS,kBAAM1H,EAAMmO,SAASnO,EAAMoO,MAAON,EAAKnM,KAAtF,sBAChB,6BAAI,wBAAQb,UAAU,kBAAkB4G,QAAS,kBAAM1H,EAAMqO,OAAOrO,EAAMoO,MAAON,IAA7E,sBAP8B,MAAQtJ,YCkP/C8J,G,kDAlPX,aAAe,IAAD,8BACV,gBA2BJC,mBAAqB,SAACC,GAEbA,EAAUC,mBAAqB,EAAKzO,MAAMyO,kBAAsB,EAAKzO,MAAMoO,QAC5E,EAAKjD,SAAL,eAAmB,EAAKnL,MAAMyO,mBAC9B,EAAKC,YAAY,EAAK1O,MAAMyO,mBAG3BD,EAAUG,sBAAwB,EAAK3O,MAAM2O,qBAAwB,EAAK3O,MAAMoO,QACjF,EAAKjD,SAAL,eAAmB,EAAKnL,MAAM2O,sBAC9B,EAAKD,YAAY,EAAK1O,MAAM2O,uBArCtB,EAyCdzD,cAAgB,SAAC3I,GACb,EAAK4I,SAAL,eAAiB5I,EAAE4B,OAAO/B,KAAOG,EAAE4B,OAAO/C,QAC1C,EAAKwF,SAASrE,EAAE4B,OAAO/B,KAAMG,EAAE4B,OAAO/C,QA3C5B,EA8CdwF,SAAW,SAACK,EAAO7F,GACf,IAAM+K,EAAiB,EAAKzB,MAAMxE,WAC9BiG,EAAelF,GAAOpB,UAA6B,IAAjBzE,EAAM8F,OACxC,EAAKiE,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAK,gCAITkB,EAAM8F,OAASiF,EAAelF,GAAOnB,aAAgB1E,EAAM8F,OAASiF,EAAelF,GAAOlB,WAClG,EAAKoF,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAI,wCAAD,OAA0CiM,EAAelF,GAAOnB,UAAhE,0BAA2FqG,EAAelF,GAAOlB,iBAIzHoG,EAAelF,GAAO2H,QAAU,EAAKC,cAAczN,GAC1D,EAAK+J,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,KAAM,EAAKF,MAAMoO,MAAQ,OAAS,IAAM,oCAKpDzN,QAAQC,IAAIqG,EAAOkF,EAAelF,GAAOpB,SAAUzE,EAAM8F,QAEzD,EAAKiE,SAAS,CACVjF,WAAW,2BACJ,EAAKwE,MAAMxE,YADR,kBAELe,EAFK,2BAGC,EAAKyD,MAAMxE,WAAWe,IAHvB,IAIFjB,OAAO,EACP9F,IAAI,WA1FV,EAkGd2O,cAAgB,SAAClN,GACb,OAAO,EAAK3B,MAAMqE,KAAKyK,QAAO,SAAAvM,GAAC,OAAIA,EAAE0L,cAAgBtM,KAAIuF,QAnG/C,EAsGdwH,YAAc,SAACrK,GACX,IAAI8H,EAAc,eAAQ,EAAKzB,MAAMxE,YACrCvF,QAAQC,IAAIuL,GACZrF,OAAOC,KAAKoF,GAAgBnF,SAAQ,SAACC,GACjCtG,QAAQC,IAAIqG,GACZtG,QAAQC,IAAIuL,EAAelF,IAC3B,IAAI7F,EAAQiD,EAAK4C,GAEbkF,EADAA,EAAelF,GAAOpB,UAA6B,IAAjBzE,EAAM8F,OAC1B,2BACPiF,GADO,kBAETlF,EAFS,2BAGHkF,EAAelF,IAHZ,IAINjB,OAAO,EACP9F,IAAK,8BAILkB,EAAM8F,OAASiF,EAAelF,GAAOnB,aAAgB1E,EAAM8F,OAASiF,EAAelF,GAAOlB,WACpF,2BACPoG,GADO,kBAETlF,EAFS,2BAGHkF,EAAelF,IAHZ,IAINjB,OAAO,EACP9F,IAAI,wCAAD,OAA0CiM,EAAelF,GAAOnB,UAAhE,0BAA2FqG,EAAelF,GAAOlB,eAO9G,2BACPoG,GADO,kBAETlF,EAFS,2BAGHkF,EAAelF,IAHZ,IAINjB,OAAO,EACP9F,IAAI,UAOpB,EAAKiL,SAAS,CAAEjF,WAAYiG,KAhJlB,EAmJdC,YAAc,WACV,IAAId,EAAiB,eAAQ,EAAKZ,MAAMxE,YACpClE,EAAU,GAId,OAHA8E,OAAOC,KAAKuE,GAAmBtE,SAAQ,SAACC,GACpCjF,EAAQqK,KAAKf,EAAkBrE,GAAOjB,UAEnChE,EAAQsK,UAAS,IAzJd,EA4JdT,aA5Jc,sBA4JC,oCAAAtF,EAAA,yDACPM,EAAU,CACVoH,YAAa,EAAKvD,MAAMuD,YACxB7L,KAAM,EAAKsI,MAAMtI,MAEhB,EAAKpC,MAAMoO,MALL,oBAMF,EAAKpO,MAAMyO,iBANT,iCAOwB,EAAKzB,gBAAgBG,eAAetG,GAP5D,OAOGkI,EAPH,OAQHpO,QAAQC,IAAImO,EAAa1K,MACrB0K,EAAa1K,KAAKoC,SAClB,EAAKzG,MAAMgP,cAVZ,+BAeHnI,EAAQlF,GAAK,EAAK+I,MAAM/I,GAfrB,UAgBwB,EAAKqL,gBAAgBK,eAAexG,GAhB5D,QAgBGkI,EAhBH,OAiBHpO,QAAQC,IAAImO,EAAa1K,MACrB0K,EAAa1K,KAAKoC,SAClB,EAAKzG,MAAMgP,cAnBZ,mCA0BPnI,EAAQoI,UAAY,EAAKjP,MAAMkP,eAC1B,EAAKlP,MAAM2O,oBA3BT,kCA4B2B,EAAK3B,gBAAgBS,kBAAkB5G,GA5BlE,QA4BGsI,EA5BH,OA6BHxO,QAAQC,IAAIuO,EAAgB9K,MACxB8K,EAAgB9K,KAAKoC,SACrB,EAAKzG,MAAMgP,cA/BZ,+BAoCHnI,EAAQlF,GAAK,EAAK+I,MAAM/I,GApCrB,UAqC2B,EAAKqL,gBAAgBY,kBAAkB/G,GArClE,QAqCGsI,EArCH,OAsCHxO,QAAQC,IAAIuO,EAAgB9K,MACxB8K,EAAgB9K,KAAKoC,SACrB,EAAKzG,MAAMgP,cAxCZ,4CA5JD,EA6Md3D,cAAgB,WACZ,IAAIC,EAAiB,eAAQ,EAAKZ,MAAMxE,YAExCY,OAAOC,KAAKuE,GAAmBtE,SAAQ,SAACC,GAChCqE,EAAkBrE,GAAOpB,UACzByF,EAAkBrE,GAAOjB,OAAQ,EACjCsF,EAAkBrE,GAAO/G,IAAM,sBAE/BoL,EAAkBrE,GAAO/G,IAAM,MAIvC,EAAKiL,SAAS,CAAE8C,YAAa,GAAI7L,KAAM,MAvNvC,EAAKsI,MAAQ,CACTuD,YAAa,GACb7L,KAAM,GACNT,GAAI,GACJsN,UAAW,GACX/I,WAAY,CACR+H,YAAa,CACTpI,UAAU,EACVC,UAAW,GACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,qBACL0O,QAAQ,GAEZxM,KAAM,CACFyD,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,OAAO,EACP9F,IAAK,wBAIjB,EAAK8M,gBAAkB,IAAIA,GAzBjB,E,0CA6Nd,WACI,OACI,sBAAKlM,UAAU,YAAf,UACI,cAAC,EAAD,CAAOuB,OAAQkB,KAAKvD,MAAMoO,MAAQ,OAAS,IAAM,cAAehM,KAAK,cAAchB,MAAOmC,KAAKmH,MAAMuD,YAAa9N,KAAK,OACnH6B,QAASuB,KAAKmH,MAAMxE,WAAW+H,YAAYjI,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAW+H,YAAY/N,IACzFsC,aAAce,KAAK2H,gBAEvB,cAAC,EAAD,CAAO7I,OAAQkB,KAAKvD,MAAMoO,MAAQ,OAAS,IAAM,gBAAiBhM,KAAK,OAAOhB,MAAOmC,KAAKmH,MAAMtI,KAAMjC,KAAK,OACvG6B,QAASuB,KAAKmH,MAAMxE,WAAW9D,KAAK4D,MAAO9F,IAAKqD,KAAKmH,MAAMxE,WAAW9D,KAAKlC,IAC3EsC,aAAce,KAAK2H,gBAEvB,wBAAQpK,UAAU,uBAAuB4G,QAASnE,KAAKsI,aAAczH,SAAUb,KAAK6I,cAApF,SACM7I,KAAKvD,MAAMyO,kBAAoBlL,KAAKvD,MAAM2O,oBAAuB,SAAW,SAElF,wBAAQ7N,UAAU,uBAAuB4G,QAASnE,KAAK8H,cAAvD,0B,GA7OYvJ,aCFb,YAAC9B,GACZ,OACI,qBAAKc,WAA2B,YAAfd,EAAMG,KAAqB,uBAAyB,uBAAyBH,EAAMwM,KAAO,GAAK,WAAa,QAA7H,SACKxM,EAAMiC,WCyHJmN,G,kDAtHX,aAAe,IAAD,8BACV,gBAiBJC,kBAAoB,WAChB,EAAKpC,iBAnBK,EAsBdA,cAtBc,sBAsBE,kCAAA1G,EAAA,sEACc,EAAKyG,gBAAgBC,gBADnC,cACNqC,EADM,QAEIjL,KAAKoC,SACX8I,EAAaD,EAAYjL,KAAKA,KACpC,EAAK8G,SAAS,CAAEoE,aAAYtD,aAAc,UAAWC,gBAAiBoD,EAAYjL,KAAKnE,MACvF,EAAKqM,gBAEL,EAAKpB,SAAS,CAAEc,aAAc,SAAUC,gBAAiBoD,EAAYjL,KAAKnE,MAC1E,EAAKqM,eARG,SAWiB,EAAKS,gBAAgBO,mBAXtC,QAWNiC,EAXM,QAYOnL,KAAKoC,SACdgJ,EAAgBD,EAAenL,KAAKA,KAC1C,EAAK8G,SAAS,CAAEsE,gBAAexD,aAAc,UAAWC,gBAAiBoD,EAAYjL,KAAKnE,MAC1F,EAAKqM,gBAEL,EAAKpB,SAAS,CAAEc,aAAc,SAAUC,gBAAiBoD,EAAYjL,KAAKnE,MAC1E,EAAKqM,eAIL,EAAK7B,MAAMwE,gBACX,EAAKQ,iBAAiB,EAAKhF,MAAMwE,gBAvBzB,2CAtBF,EAiDdQ,iBAAmB,SAACT,GAChB,IAAMU,EAAqB,EAAKjF,MAAM+E,cAAcX,QAAO,SAAAc,GAAM,OAAIA,EAAOX,YAAcA,KAC1F,EAAK9D,SAAS,CAAEwE,qBAAoBT,eAAgBD,KAnD1C,EAsDd1C,YAAc,WACV,EAAKpB,SAAS,CAAEsB,eAAe,IAC/BC,YAAW,WACP,EAAKvB,SAAS,CAAEsB,eAAe,MAChC,OA1DO,EA6DdoD,aA7Dc,uCA6DC,WAAOzB,EAAO0B,GAAd,SAAAvJ,EAAA,sDACN6H,EAGD,EAAKjD,SAAS,CAAEwD,oBAAoB,eAAMmB,KAF1C,EAAK3E,SAAS,CAAEsD,iBAAiB,eAAMqB,KAFhC,2CA7DD,0DAsEdC,eAtEc,uCAsEG,WAAO3B,EAAOzM,GAAd,SAAA4E,EAAA,yDACb5F,QAAQC,IAAIwN,EAAOzM,GACdyM,EAFQ,uBAGT,EAAKjD,SAAS,CAAEmC,eAAgB3L,IAHvB,SAIH,EAAKqL,gBAAgBM,eAAe3L,GAJjC,OAKT,EAAKsL,gBALI,8BAOT,EAAK9B,SAAS,CAAE6E,mBAAoBrO,IAP3B,UAQH,EAAKqL,gBAAgBW,kBAAkBhM,GARpC,QAST,EAAKsL,gBATI,4CAtEH,wDAEV,EAAKvC,MAAQ,CACT6E,WAAY,GACZE,cAAe,GACfE,mBAAoB,GACpBT,gBAAgB,EAChBjD,aAAc,GACdC,gBAAiB,GACjBO,eAAe,EACfgC,kBAAkB,EAClBE,qBAAqB,EACrBrB,gBAAgB,EAChB0C,oBAAoB,GAExB,EAAKhD,gBAAkB,IAAIA,GAfjB,E,0CAmFd,WACI,IAAIiD,EAAW,UAEf,OADI1M,KAAKmH,MAAMwE,iBAAgBe,EAAW,IAEtC,sBAAKnP,UAAU,kBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,GAAD,CAAesN,OAAO,EAAOK,iBAAkBlL,KAAKmH,MAAM+D,iBACtDS,eAAgB3L,KAAKmH,MAAMwE,eAAgBF,YAAazL,KAAK0J,cAC7D5I,KAAMd,KAAKmH,MAAM6E,eAGzB,sBAAKzO,UAAU,kBAAf,UACI,4CACA,cAAC,GAAD,CAAWsN,OAAO,EAAO/J,KAAMd,KAAKmH,MAAM6E,WAAYxB,OAAO,OAAOC,aAAczK,KAAKmM,iBACnFrB,OAAQ9K,KAAKsM,aAAc1B,SAAU5K,KAAKwM,oBAElD,sBAAKjP,UAAW,kBAAoBmP,EAApC,UACI,gDACA,cAAC,GAAD,CAAW7B,OAAO,EAAM/J,KAAMd,KAAKmH,MAAMiF,mBAAoB5B,OAAO,QAChEM,OAAQ9K,KAAKsM,aAAc1B,SAAU5K,KAAKwM,oBAElD,qBAAKjP,UAAW,gBAAkBmP,EAAlC,SACI,cAAC,GAAD,CAAe7B,OAAO,EAAMO,oBAAqBpL,KAAKmH,MAAMiE,oBACxDO,eAAgB3L,KAAKmH,MAAMwE,eAAgBF,YAAazL,KAAK0J,cAC7D5I,KAAMd,KAAKmH,MAAM+E,qBAI7B,cAACS,GAAD,CAAO/P,KAAMoD,KAAKmH,MAAMuB,aAAchK,QAASsB,KAAKmH,MAAMwB,gBAAiBM,KAAMjJ,KAAKmH,MAAM+B,uB,GAlHrF3K,aCGVqO,GAAS,WAElB,IAAM5P,EAAOC,eAAeC,QAAQ,SAC9BC,EAAOF,eAAeC,QAAQ,QAEpC,OAAIF,GAAiB,UAATG,EACA,eAAC,IAAD,WACJ,cAAC,IAAD,CAAO0P,OAAK,EAACC,KAAK,IAAIxP,UAAWgB,IACjC,cAAC,IAAD,CAAOuO,OAAK,EAACC,KAAK,YAAYxP,UAAWyP,IACzC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYxP,UAAWuO,KACzC,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,WAAWxP,UAAW+D,IACxC,cAAC,IAAD,CAAU2L,GAAG,SAEfhQ,GAAiB,aAATG,EACF,eAAC,IAAD,WACJ,cAAC,IAAD,CAAO0P,OAAK,EAACC,KAAK,IAAIxP,UAAWgB,IACjC,cAAC,IAAD,CAAOuO,OAAK,EAACC,KAAK,YAAYxP,UAAWyP,IACzC,cAAC,IAAD,CAAUC,GAAG,SAGT,eAAC,IAAD,WACJ,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,IAAIxP,UAAWgB,IACjC,cAAC,IAAD,CAAOuO,OAAK,EAACC,KAAK,YAAYxP,UAAWyP,IACzC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUxP,UAAWoK,KACvC,cAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,SAASxP,UAAW+L,KACtC,cAAC,IAAD,CAAU2D,GAAG,UCrBVC,OATf,WAEE,OACE,cAAC,EAAD,UACE,cAAC,GAAD,OCISC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCJRQ,GAAe,CACjB1L,SAAU,GACVC,iBAAkB,GAClB0L,iBAAkB,GAClBzH,WAAY,GACZ0H,OAAQ,ICLCC,GAAcC,aAAgB,CACvC9L,SDO0B,WAAmC,IAAlCkF,EAAiC,uDAAzBwG,GAAcK,EAAW,uCAC5D,OAAQA,EAAOpR,MASX,KAAKwK,EAED,OADAhK,QAAQC,IAAI2Q,EAAO7H,YACZ,2BACAgB,GADP,IAEIjF,iBAAiB,YAAKiF,EAAMlF,SAASsJ,QAAO,SAAChL,GACzC,OAAOgD,OAAOC,KAAKjD,GAASQ,KAAI,SAAC2C,GAC7B,GAA8B,kBAAnBnD,EAAQmD,GACf,OAAOnD,EAAQmD,GAAOuK,cAAclF,SAASiF,EAAO7H,WAAW8H,kBAEpElF,UAAS,SAKxB,KAAK3B,EAED,OADAhK,QAAQC,IAAI,wBAAyB2Q,GAC9B,2BACA7G,GADP,IAEIlF,SAAU+L,EAAO/L,SACjB4L,OAAQ,CACJK,QAAQ,EACRvR,IAAKqR,EAAOrR,OAKxB,KAAKyK,EACD,OAAO,2BACAD,GADP,IAEI0G,OAAQ,CACJK,QAAQ,EACRvR,IAAKqR,EAAOrR,OAKxB,KAAKyK,EACD,OAAO,2BACAD,GADP,IAEI0G,OAAQ,CACJM,OAAQH,EAAOzN,QACf2N,QAAQ,EACRvR,IAAKqR,EAAOrR,OAKxB,KAAKyK,EACD,OAAO,2BACAD,GADP,IAEI0G,OAAQ,CACJK,QAAQ,EACRvR,IAAKqR,EAAOrR,OAKxB,QACI,OAAOwK,M,8BElETiH,I,YAiBAC,I,YAWAC,I,YAgBAC,I,YAOeC,IA5DnBjN,GAAiB,IAAItB,E,SAIZwO,K,8EAAf,4BAAAzL,EAAA,sEACyBzB,GAAerB,cADxC,cACU2N,EADV,yBAEWA,GAFX,4C,sBAKA,SAAUO,KAAV,uEACqB,OADrB,SAC2BM,aAAKD,IADhC,YACUhG,EADV,QAGiB3H,KAAKoC,QAHtB,gBAIQ,OAJR,SAIcrD,aAAI,CACNjD,KAAMwK,EAAQ1B,sBACdzD,SAAUwG,EAAS3H,KAAKA,KACxBnE,IAAK8L,EAAS3H,KAAKnE,MAP/B,8BAUQ,OAVR,UAUckD,aAAI,CACNjD,KAAMwK,EAAQzB,qBACdhJ,IAAK8L,EAAS3H,KAAKnE,MAZ/B,yCAiBA,SAAU0R,KAAV,iEACI,OADJ,SACUM,aAAWvH,EAAQ/B,aAAc+I,IAD3C,wC,SAMetI,G,iFAAf,WAA0BvF,GAA1B,eAAAyC,EAAA,sEACyBzB,GAAenB,cAAcG,GADtD,cACUsN,EADV,yBAEWA,GAFX,4C,sBAKA,SAAUS,GAAmBN,GAA7B,uEACqB,OADrB,SAC2BU,aAAK5I,GAAYkI,EAAOjI,SADnD,YACU0C,EADV,QAEiB3H,KAAKoC,QAFtB,gBAGQ,OAHR,SAGcrD,aAAI,CACNjD,KAAMwK,EAAQxB,oBACd3D,SAAUwG,EAAS3H,KAAKA,KACxBnE,IAAK8L,EAAS3H,KAAKnE,MAN/B,8BASQ,OATR,UASckD,aAAI,CACNjD,KAAMwK,EAAQvB,mBACdlJ,IAAK8L,EAAS3H,KAAKnE,MAX/B,yCAgBA,SAAU4R,KAAV,iEACI,OADJ,SACUI,aAAWvH,EAAQ9B,YAAagJ,IAD1C,wCAOe,SAAUE,KAAV,iEACX,OADW,SACLI,aAAI,CAACP,KAAqBE,OADrB,wCC3Df,IAAMM,GAAoBrR,OAAOsR,sCAAwCC,KACnEC,GAAiBC,eACnBC,GAAQC,aAAYrB,GAAae,GAAkBO,aAAgBJ,MAEvEA,GAAeK,IAAIb,IAEJU,UCAfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINO,SAASC,eAAe,SAM1BxC,O","file":"static/js/main.2e08f0e8.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const MainContext = createContext(\"\")","import React, { useEffect, useState } from 'react'\nimport { MainContext } from '../../maincontext'\n\nexport const Base = (props) => {\n\n    const [alert, setAlert] = useState({ msg: \"TEST\", type: \"success\", toggeled: false })\n\n    // useEffect(() => {\n    //     setTimeout(() => {\n    //         setAlert({ ...alert, toggeled: false })\n    //     }, 2500)\n    // }, [alert])\n\n    const showAlert = (alert) => {\n        setAlert(alert)\n    }\n\n    const auth = sessionStorage.getItem('token')\n    const role = sessionStorage.getItem('role')\n    console.log(auth, role)\n\n    let component = <div className=\"navbar-nav\">\n        <a className={`${window.location.pathname === '/' ? 'nav-link active' : 'nav-link'}`} href=\"/\">Home</a>\n        <a className={`${window.location.pathname === '/signup' ? 'nav-link active' : 'nav-link'}`} href=\"/signup\">Registration</a>\n        <a className={`${window.location.pathname === '/login' ? 'nav-link active' : 'nav-link'}`} href=\"/login\">Login</a>\n        <a className={`${window.location.pathname === '/products' ? 'nav-link active' : 'nav-link'}`} href=\"/products\">Products</a>\n    </div>\n\n    if (auth && role === 'customer') {\n        component = <div className=\"navbar-nav\">\n            <a className={`${window.location.pathname === '/' ? 'nav-link active' : 'nav-link'}`} href=\"/\">Home</a>\n            <a className={`${window.location.pathname === '/products' ? 'nav-link active' : 'nav-link'}`} href=\"/products\">Products</a>\n        </div>\n    }\n\n    if (auth && role === 'admin') {\n        component = <div className=\"navbar-nav\">\n            <a className={`${window.location.pathname === '/' ? 'nav-link active' : 'nav-link'}`} href=\"/\">Home</a>\n            <a className={`${window.location.pathname === '/products' ? 'nav-link active' : 'nav-link'}`} href=\"/products\">Products</a>\n            <a className={`${window.location.pathname === '/product' ? 'nav-link active' : 'nav-link'}`} href=\"/product\">Product Create</a>\n            <a className={`${window.location.pathname === '/category' ? 'nav-link active' : 'nav-link'}`} href=\"/category\">Category</a>\n        </div>\n    }\n\n    return (\n        <MainContext.Provider value={{ showAlert }}>\n            <div className=\"container-fluid p-0\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        {component}\n                    </div>\n                </nav>\n                <div className=\"container-fluid\">\n                    {props.children}\n                </div>\n\n                <div className={\"alert alert-\" + alert.type + (alert.toggeled ? \"\" : \" d-none\")} role=\"alert\">\n                    {alert.msg}\n                </div>\n            </div>\n        </MainContext.Provider>\n    )\n}","import React, { Component } from 'react'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <h1 className=\"display-4\">Home Page</h1>\n                    <p className=\"lead\">This is M(MariaDB)E(Express)R(React)N(NodeJS)</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\n\nconst ValidationMessage = (props) => {\n    // console.log(props)\n    return (\n        <div className={`${props.isValid ? 'invalid-message' : 'd-none'}`} >\n            {props.message}\n        </div >\n    )\n}\n\nexport default ValidationMessage","import React from 'react'\nimport ValidationMessage from '../UI/ValidationMessage'\n\nexport const Input = (props) => {\n    return (<div className=\"form-group\">\n        <label htmlFor={props.name}>{props.label}</label>\n        <input className=\"form-control\" value={props.value} type={props.type} name={props.name} onChange={(e) => props.handleChange(e)} />\n        <ValidationMessage isValid={props.isValid} message={props.msg} />\n    </div>)\n}","import axios from 'axios'\n\nclass ManufacturerService {\n\n    constructor() {\n        this.baseUrl = 'http://localhost:5004'\n    }\n\n    getManufacturers = () => {\n        return axios.get(`${this.baseUrl}/manufacturer`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    getManufacturerById = (id) => {\n        return axios.get(`${this.baseUrl}/manufacturer/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    createManufacturer = (manufacturer) => {\n        return axios.post(`${this.baseUrl}/manufacturer`, manufacturer, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    updateManufacturer = (manufacturer) => {\n        return axios.put(`${this.baseUrl}/manufacturer/${manufacturer.id}`, manufacturer, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    deleteManufacturer = (id) => {\n        return axios.delete(`${this.baseUrl}/manufacturer/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n}\n\nexport default ManufacturerService","import axios from 'axios'\n\nclass ProductService {\n\n    constructor() {\n        this.baseUrl = 'http://localhost:5005'\n    }\n\n    getProducts = () => {\n        return axios.get(`${this.baseUrl}/product`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    getProductById = (id) => {\n        return axios.get(`${this.baseUrl}/product/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    createProduct = (formData) => {\n        return axios.post(`${this.baseUrl}/product`, formData, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token'),\n                'Content-type': 'multipart/form-data'\n            }\n        })\n    }\n\n    updateProduct = (product) => {\n        return axios.put(`${this.baseUrl}/product/${product.id}`, product, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    deleteProduct = (id) => {\n        return axios.delete(`${this.baseUrl}/product/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n}\n\nexport default ProductService","import React from \"react\";\nimport ValidationMessage from './ValidationMessage'\n\nconst Select = (props) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.name}>{props.label}</label>\n            <select className=\"form-control\" name={props.name} value={props.selected} onChange={(e) => props.changeSelect(e.target.value)}>\n                <option value=\"\" disabled>Choose</option>\n                {\n                    props.data.map((row, _i) => <option key={`${props.name}-${_i}`} value={row.id}>{row.name}</option>)\n                }\n            </select>\n            <ValidationMessage isValid={props.isValid} message={props.msg} />\n        </div>\n    )\n}\n\nexport default Select","const FileInput = (props) => {\n    return (\n        <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\n            </div>\n            <div className=\"custom-file\">\n                <input type=\"file\" className=\"custom-file-input\" multiple id=\"inputGroupFile01\"\n                    onChange={(e) => { props.handleChange(e.target.files) }} />\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">Choose file</label>\n            </div>\n        </div>\n    )\n}\n\nexport default FileInput","import React, { useEffect, useState } from 'react'\nimport { Input } from '../UI/Input'\nimport ManufacturerService from '../../services/manufacturer'\nimport ProductService from '../../services/product'\nimport Select from '../UI/Select'\nimport FileInput from '../UI/FileInput'\n\nconst Product = () => {\n    const manufacturerService = new ManufacturerService()\n    const productService = new ProductService()\n\n    const [product, setProduct] = useState({\n        name: \"\",\n        sku: \"\",\n        manufacturer_id: \"\",\n        price: 0,\n        weight: 0,\n        description: \"\",\n        short_description: \"\",\n        url: \"\",\n        visibilty: 0\n    })\n\n    const [products, setProducts] = useState({ products: [], filteredProducts: [] })\n    const [searchText, setSearchText] = useState(\"\")\n\n    const [productImages, setProductImages] = useState([])\n    const [selectedProduct, setSelectedProduct] = useState({})\n\n    const [validation, setValidation] = useState({\n        name: { required: true, minLength: 3, maxLength: 30, error: true, msg: \"Field is required!\" },\n        sku: { required: true, minLength: 3, maxLength: 30, error: true, msg: \"Field is required!\" },\n        manufacturer_id: { required: true, error: true, msg: \"Field is required!\" },\n        price: { required: true, notzero: true, error: true, msg: \"Field is required!\" },\n        weight: { required: true, notzero: true, error: true, msg: \"Field is required!\" },\n        description: { required: true, minLength: 3, maxLength: 2000, error: true, msg: \"Field is required!\" },\n        short_description: { required: true, minLength: 3, maxLength: 500, error: true, msg: \"Field is required!\" },\n        url: { required: true, minLength: 3, maxLength: 30, error: true, msg: \"Field is required!\" },\n        visibilty: { required: true, error: true, msg: \"Field is required!\" },\n    })\n\n    const [manufacturers, setManufacturers] = useState([])\n    const setProductManufacturer = (id) => {\n        setProduct({ ...product, manufacturer_id: id })\n    }\n\n    useEffect(async () => {\n        const manufacturersResp = await manufacturerService.getManufacturers()\n        if (manufacturersResp.data.success) {\n            // console.log(manufacturersResp.data.data)\n            setManufacturers([...manufacturersResp.data.data])\n        } else {\n            //TODO\n        }\n        const productResp = await productService.getProducts()\n        if (productResp.data.success) {\n            // console.log('Product Service')\n            const productsResult = [...productResp.data.data]\n            setProducts({ products: productsResult, filteredProducts: productsResult })\n            // setFilteredProducts(productsResult)\n        } else {\n            //TODO\n        }\n\n    }, [])\n\n    useEffect(() => {\n        validate()\n    }, [product])\n\n    const validate = () => {\n        let tempObj = { ...validation }\n        Object.keys(tempObj).forEach((field) => {\n            // console.log(field, product[field])\n            if (tempObj[field].required && product[field].length === 0) {\n                // console.log(field, product[field])\n                tempObj = {\n                    ...tempObj,\n                    [field]: {\n                        ...tempObj[field],\n                        error: true,\n                        msg: 'This field is required!'\n                    }\n                }\n            } else if ((product[field].length > tempObj[field].minLength) && !(product[field].length < tempObj[field].maxLength)) {\n                tempObj = {\n                    ...tempObj,\n                    [field]: {\n                        ...tempObj[field],\n                        error: true,\n                        msg: `The field length should be minimum = ${tempObj[field].minLength} and maximum = ${tempObj[field].maxLength}`\n                    }\n                }\n            } else if (tempObj[field].notzero && product[field] <= 0) {\n                // console.log(field, product[field])\n                tempObj = {\n                    ...tempObj,\n                    [field]: {\n                        ...tempObj[field],\n                        error: true,\n                        msg: 'Value should be positive!'\n                    }\n                }\n            } else {\n                // console.log(field)\n                tempObj = {\n                    ...tempObj,\n                    [field]: {\n                        ...tempObj[field],\n                        error: false,\n                        msg: \"\"\n                    }\n                }\n            }\n        })\n        setValidation(tempObj)\n    }\n\n    const onSave = async () => {\n        const formData = new FormData()\n        formData.append('product-data', JSON.stringify(product))\n        Object.keys(productImages).forEach(file => formData.append('product_images', productImages[file]))\n        await productService.createProduct(formData)\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-lg-5\">\n                    <div className=\"form-group mt-3\">\n                        <Input label=\"Name\" name=\"name\" value={product.name} type=\"text\"\n                            isValid={validation.name.error}\n                            msg={validation.name.msg} handleChange={(e) => { setProduct({ ...product, name: e.target.value }) }}\n                        />\n                        <Input label=\"SKU\" name=\"sku\" value={product.sku} type=\"text\"\n                            isValid={validation.sku.error}\n                            msg={validation.sku.msg} handleChange={(e) => { setProduct({ ...product, sku: e.target.value }) }}\n                        />\n                        <Input label=\"URL\" name=\"url\" value={product.url} type=\"text\"\n                            isValid={validation.url.error}\n                            msg={validation.url.msg} handleChange={(e) => { setProduct({ ...product, url: e.target.value }) }}\n                        />\n                        <Select name=\"manufacturer_id\" label=\"Manufacurer\" data={manufacturers}\n                            changeSelect={setProductManufacturer} selected={product.manufacturer_id}\n                            isValid={validation.manufacturer_id.error} msg={validation.manufacturer_id.msg}\n                        />\n                        <Input label=\"Price\" name=\"price\" value={product.price} type=\"number\"\n                            isValid={validation.price.error}\n                            msg={validation.price.msg} handleChange={(e) => { setProduct({ ...product, price: e.target.value }) }}\n                        />\n                        <Input label=\"Weight\" name=\"weight\" value={product.weight} type=\"number\"\n                            isValid={validation.weight.error}\n                            msg={validation.weight.msg} handleChange={(e) => { setProduct({ ...product, weight: e.target.value }) }}\n                        />\n                        <Input label=\"Description\" name=\"description\" value={product.description} type=\"text\"\n                            isValid={validation.description.error}\n                            msg={validation.description.msg} handleChange={(e) => { setProduct({ ...product, description: e.target.value }) }}\n                        />\n                        <Input label=\"Short Description\" name=\"short_description\" value={product.short_description} type=\"text\"\n                            isValid={validation.short_description.error}\n                            msg={validation.short_description.msg} handleChange={(e) => { setProduct({ ...product, short_description: e.target.value }) }}\n                        />\n                        <Select name=\"visible\" label=\"Visibility\" data={[{ id: 1, name: 'Visible' }, { id: 0, name: 'Hidden' }]}\n                            changeSelect={(val) => { setProduct({ ...product, visibilty: val }) }} selected={product.visibilty}\n                            isValid={validation.visibilty.error} msg={validation.visibilty.msg}\n                        />\n                        <FileInput handleChange={setProductImages} />\n                        <button className=\"btn btn-success\" onClick={onSave}>Save</button>\n                        <button className=\"btn btn-warning ml-5\">Clear</button>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Product","import { createContext } from 'react'\n\nexport const ProductContext = createContext(null);\n","import React, { useContext } from 'react'\nimport { ProductContext } from './ProductContext'\n\nconst ProductDetails = () => {\n    const productContext = useContext(ProductContext)\n\n    const { selectedProduct } = productContext\n    // console.log(selectedProduct)\n\n    return (\n        <div className=\"modal fade\" id=\"orderModel\" tabIndex=\"-1\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Product Details</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                            <span>&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"card\">\n                            {\n                                (selectedProduct.product_images && selectedProduct.product_images.length) > 0 ? <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\n                                    <div className=\"carousel-inner\">\n                                        {\n                                            selectedProduct.product_images.map((img, _i) =>\n                                                <div key={\"product_detail_caro\" + _i} className={_i === 0 ? \"carousel-item active\" : \"carousel-item\"}>\n                                                    <div style={{ backgroundImage: `url(${\"http://localhost:5005/\" + img.image_path})`, backgroundSize: 'cover', height: '500px' }}\n                                                        //src={\"http://localhost:5005/\" + img.image_path} \n                                                        className=\"w-100\" alt={img.name} />\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                        <span className=\"sr-only\">Previous</span>\n                                    </a>\n                                    <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                        <span className=\"sr-only\">Next</span>\n                                    </a>\n                                </div> : \"\"\n                            }\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\"><strong>{selectedProduct.name}</strong></h5>\n                                <p className=\"card-text\">{selectedProduct.description}</p>\n                                <p className=\"card-text\">Price : {selectedProduct.price}/-</p>\n                                <p className=\"card-text\">SKU : {selectedProduct.sku}</p>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductDetails","export const GET_PRODUCTS = 'GET_PRODUCTS'\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCTS'\nexport const DELETE_PRODUCT = 'DELETE_PRODUCTS'\nexport const SEARCH_PRODUCT = 'SEARCH_PRODUCT'\nexport const FETCH_PRODUCT_SUCCESS = \"FETCH_PRODUCT_SUCCESS\"\nexport const FETCH_PRODUCT_FAILED = \"FETCH_PRODUCT_FAILED\"\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\"\nexport const ADD_PRODUCT_FAILED = \"ADD_PRODUCT_FAILED\"\n\n\nexport const getProducts = () => {\n    return {\n        type: GET_PRODUCTS\n    }\n}\n\n\nexport const addProduct = (data) => {\n    return {\n        type: ADD_PRODUCT,\n        payload: data\n    }\n}\n\n\nexport const updateProduct = (updatedData, id) => {\n    return {\n        type: UPDATE_PRODUCT,\n        id,\n        payload: updatedData\n    }\n}\n\n\nexport const deleteProduct = (id) => {\n    return {\n        type: DELETE_PRODUCT,\n        id\n    }\n}\n\nexport const searchProducts = (keyword) => {\n    return {\n        type: SEARCH_PRODUCT,\n        searchText: keyword\n    }\n}","import * as productActions from './products.actions'\n\nexport default {\n    ...productActions\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { ProductContext } from './ProductContext'\nimport { MainContext } from '../maincontext'\nimport ProductService from '../../services/product'\nimport ProductDetails from './ProductDetails'\nimport { useDispatch, useSelector } from 'react-redux'\nimport actions from '../../store/actions/actions'\n\nconst TableHeader = (props) => {\n    return (\n        <thead>\n            <tr>\n                {props.columns.map((header, _i) => {\n                    if (typeof props.row[header] !== 'object') {\n                        return <th key={`${'table-head-' + header}`}>{header}</th>\n                    }\n                })}\n                <th>Image</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableRow = (props) => {\n    return (\n        <tr>\n            {props.columns.map((field, _i) => {\n                if (typeof props.row[field] !== 'object') {\n                    return <td key={`${'table-cell-' + field}`}>{props.row[field]}</td>\n                }\n            })}\n            {console.log(props.row)}\n            {(props.isImg) ? <td><img className=\"table-product-img\" src={(props.row[props.isImg].length ? \"http://localhost:5005/\" + props.row[props.isImg][0]['image_path'] : \"\")} alt=\"No Image\" /></td> : \"\"}\n            <td><button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#orderModel\" onClick={() => { props.onDetail(props.row) }}>\n                Show Order Details\n            </button></td>\n        </tr>\n    )\n}\n\nconst Table = () => {\n    let dispatch = useDispatch()\n\n    // const [products, setProducts] = useState({ products: [], filteredProducts: [] })\n    const [searchText, setSearchText] = useState(\"\")\n    const [selectedProduct, setSelectedProduct] = useState({})\n\n    let productsState = useSelector(state => state.products)\n\n\n    // dispatch(actions.getProducts())\n    useEffect(() => {\n        dispatch(actions.getProducts())\n    }, [])\n    // let productsState = useSelector(state => state.products)\n\n    const filterProducts = (val) => {\n        setSearchText(val)\n        dispatch(actions.searchProducts(val))\n    }\n\n    const getProducts = productsState.filteredProducts.length ? productsState.filteredProducts : productsState.products\n\n    let component;\n    if (getProducts && getProducts.length) {\n        let headers = Object.keys(getProducts[0])\n\n        component = (<table className={\"table\"}>\n            <TableHeader columns={headers} row={getProducts[0]} />\n            <tbody>\n                {getProducts.map((row, _i) => <TableRow onDetail={setSelectedProduct} columns={headers} key={`${'table-row-' + _i}`}\n                    row={row} isImg={\"product_images\"}\n                />)}\n            </tbody>\n        </table>)\n\n    } else {\n        component = <div><strong>Invalid or Empty Data Source</strong></div>\n    }\n\n    return (\n        <div>\n            <div className=\"form-group\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search Product\"\n                    onChange={(e) => filterProducts(e.target.value)}\n                    value={searchText} />\n            </div>\n\n            { component}\n            <ProductContext.Provider value={{ data: getProducts, setSelectedProduct, selectedProduct }}>\n                <ProductDetails />\n            </ProductContext.Provider>\n        </div>\n    )\n}\n\nexport default Table","import axios from 'axios'\n\nclass UserService {\n    constructor() {\n        this.baseUrl = 'http://localhost:5001'\n    }\n\n    createUser = (user) => {\n        return axios.post(`${this.baseUrl}/user/signup`, user)\n    }\n\n    authUser = (user) => {\n        return axios.post(`${this.baseUrl}/user/login`, user)\n    }\n}\n\nexport default UserService","import { Component } from 'react'\nimport { Input } from '../UI/Input'\nimport UserService from '../../services/user/user'\nimport Select from '../UI/Select'\n\nclass Registration extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            middle_name: \"\",\n            email: \"\",\n            password: \"\",\n            primary_mobile: \"\",\n            group: \"general\",\n            validation: {\n                first_name: {\n                    required: true,\n                    minLength: 3,\n                    maxLength: 20,\n                    error: true,\n                    msg: 'Field is required!'\n                },\n                last_name: {\n                    required: true,\n                    minLength: 3,\n                    maxLength: 20,\n                    error: true,\n                    msg: 'Field is required!'\n                },\n                middle_name: {\n                    required: false,\n                    minLength: 3,\n                    maxLength: 20,\n                    error: false,\n                    msg: ''\n                },\n                email: {\n                    required: true,\n                    minLength: 3,\n                    maxLength: 50,\n                    error: true,\n                    msg: 'Field is required!'\n                },\n                password: {\n                    required: true,\n                    minLength: 8,\n                    maxLength: 20,\n                    error: true,\n                    msg: 'Field is required!'\n                },\n                primary_mobile: {\n                    required: true,\n                    minLength: 10,\n                    maxLength: 10,\n                    error: true,\n                    msg: 'Field is required!'\n                },\n                group: {\n                    required: true,\n                    error: true,\n                    msg: 'Field is required!'\n                }\n            },\n            valid: false,\n            responseType: '',\n            responseMessage: '',\n            alertToggeled: false\n        }\n        this.UserService = new UserService()\n        this.group = [\n            { id: \"2\", name: \"Customer\" },\n            { id: \"3\", name: \"Vendor\" }\n        ]\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n        this.validate(e.target.name, e.target.value)\n    }\n\n    onSelectChange = (name, value) => {\n        this.setState({ [name]: value })\n        this.validate(name, value)\n    }\n\n    onButtonClear = (e) => {\n        let tempValidationObj = { ...this.state.validation }\n\n        Object.keys(tempValidationObj).forEach((field) => {\n            if (tempValidationObj[field].required) {\n                tempValidationObj[field].error = true\n                tempValidationObj[field].msg = 'Field is required!'\n            } else {\n                tempValidationObj[field].msg = ''\n            }\n        })\n\n        this.setState({\n            first_name: \"\",\n            last_name: \"\",\n            middle_name: \"\",\n            email: \"\",\n            password: \"\",\n            primary_mobile: \"\",\n            validate: tempValidationObj\n        })\n    }\n\n    onButtonSave = async () => {\n        const tempOb = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            middle_name: this.state.middle_name,\n            email: this.state.email,\n            password: this.state.password,\n            primary_mobile: this.state.primary_mobile,\n            group: this.state.group\n        }\n\n        const response = await this.UserService.createUser(tempOb)\n        if (response.data.success) {\n            this.setState({ responseType: 'success', responseMessage: response.data.msg })\n        } else {\n            this.setState({ responseType: 'danger', responseMessage: response.data.msg })\n        }\n    }\n\n    validate = (field, value) => {\n        const tempValidation = this.state.validation\n\n        if (tempValidation[field].required && value.length === 0) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: 'This field is required!'\n                    }\n                }\n            })\n        } else if ((value.length > tempValidation[field].minLength) && !(value.length < tempValidation[field].maxLength)) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: `The field length should be minimum = ${tempValidation[field].minLength} and maximum = ${tempValidation[field].maxLength}`\n                    }\n                }\n            })\n        } else {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: false,\n                        msg: ``\n                    }\n                }\n            })\n        }\n\n    }\n\n    isFormValid = () => {\n        let tempValidationObj = { ...this.state.validation }\n        let isValid = []\n        Object.keys(tempValidationObj).forEach((field) => {\n            isValid.push(tempValidationObj[field].error)\n        })\n\n        console.log(isValid)\n        return isValid.includes(true)\n    }\n\n    toggleAlert = (show) => {\n        this.setState({ alertToggeled: show })\n        setTimeout(() => {\n            this.setState({ alertToggeled: false })\n        }, 2500)\n    }\n\n    render() {\n        return (<div className='container'>\n            <Input label=\"First Name\" name=\"first_name\" value={this.state.first_name}\n                type=\"text\" isValid={this.state.validation.first_name.error} msg={this.state.validation.first_name.msg} handleChange={this.onInputChange} />\n            <Input label=\"Last Name\" name=\"last_name\" value={this.state.last_name}\n                type=\"text\" isValid={this.state.validation.last_name.error} msg={this.state.validation.last_name.msg} handleChange={this.onInputChange} />\n            <Input label=\"Middle Name(Optional)\" name=\"middle_name\" value={this.state.middle_name}\n                type=\"text\" isValid={this.state.validation.middle_name.error} msg={this.state.validation.middle_name.msg} handleChange={this.onInputChange} />\n            <Input label=\"Email\" name=\"email\" value={this.state.email}\n                type=\"text\" isValid={this.state.validation.email.error} msg={this.state.validation.email.msg} handleChange={this.onInputChange} />\n            <Input label=\"Password\" name=\"password\" value={this.state.password}\n                type=\"text\" isValid={this.state.validation.password.error} msg={this.state.validation.password.msg} handleChange={this.onInputChange} />\n            <Input label=\"Primary Mobile\" name=\"primary_mobile\" value={this.state.primary_mobile}\n                type=\"text\" isValid={this.state.validation.primary_mobile.error} msg={this.state.validation.primary_mobile.msg} handleChange={this.onInputChange} />\n            <Select name=\"group\" label=\"Visibility\" data={this.group}\n                changeSelect={(val) => this.onSelectChange('group', val)} selected={this.state.group}\n                isValid={this.state.validation.group.error} msg={this.state.validation.group.msg}\n            />\n            <button className=\"btn btn-primary mr-2\" onClick={this.onButtonSave} disabled={this.isFormValid()} >Save</button>\n            <button className=\"btn btn-warning\" onClick={this.onButtonClear}>Clear</button>\n        </div>)\n    }\n}\n\nexport default Registration","import React, { Component } from 'react'\nimport UserService from '../../services/user/user'\nimport { Input } from '../UI/Input'\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            email: \"\",\n            password: \"\",\n            validation: {\n                email: {\n                    required: true,\n                    minLength: 3,\n                    maxLength: 50,\n                    error: true,\n                    msg: 'Field is required!'\n                },\n                password: {\n                    required: true,\n                    minLength: 8,\n                    maxLength: 20,\n                    error: true,\n                    msg: 'Field is required!'\n                }\n            },\n            valid: false\n        }\n        this.UserService = new UserService()\n\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n        this.validate(e.target.name, e.target.value)\n    }\n\n    onButtonLogin = async () => {\n        const tempOb = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        const response = await this.UserService.authUser(tempOb)\n        console.log(response.data)\n        if (response.data.success) {\n            sessionStorage.setItem('token', response.data.token)\n            sessionStorage.setItem('role', response.data.role)\n        } else {\n            //TODO\n        }\n    }\n\n    validate = (field, value) => {\n        const tempValidation = this.state.validation\n\n        if (tempValidation[field].required && value.length === 0) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: 'This field is required!'\n                    }\n                }\n            })\n        } else if ((value.length > tempValidation[field].minLength) && !(value.length < tempValidation[field].maxLength)) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: `The field length should be minimum = ${tempValidation[field].minLength} and maximum = ${tempValidation[field].maxLength}`\n                    }\n                }\n            })\n        } else {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: false,\n                        msg: ``\n                    }\n                }\n            })\n        }\n\n    }\n\n\n    isFormValid = () => {\n        let tempValidationObj = { ...this.state.validation }\n        let isValid = []\n        Object.keys(tempValidationObj).forEach((field) => {\n            isValid.push(tempValidationObj[field].error)\n        })\n        return isValid.includes(true)\n    }\n\n    render() {\n        return (<div className='container'>\n            <Input label=\"Email\" name=\"email\" value={this.state.email}\n                type=\"text\" isValid={this.state.validation.email.error} msg={this.state.validation.email.msg} handleChange={this.onInputChange} />\n            <Input label=\"Password\" name=\"password\" value={this.state.password}\n                type=\"text\" isValid={this.state.validation.password.error} msg={this.state.validation.password.msg} handleChange={this.onInputChange} />\n            <button className=\"btn btn-primary mr-2\" onClick={this.onButtonLogin} disabled={this.isFormValid()} >Login</button>\n        </div>)\n    }\n}\n\nexport default Login","import axios from 'axios'\n\nclass CategoryService {\n\n    constructor() {\n        this.baseUrl = 'http://localhost:5003'\n    }\n\n    getCategories = () => {\n        return axios.get(`${this.baseUrl}/category`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    getCategoryById = (id) => {\n        return axios.get(`${this.baseUrl}/category/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    createCategory = (category) => {\n        return axios.post(`${this.baseUrl}/category`, category, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    updateCategory = (category) => {\n        return axios.put(`${this.baseUrl}/category/${category.id}`, category, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    deleteCategory = (id) => {\n        return axios.delete(`${this.baseUrl}/category/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    getSubCategories = () => {\n        return axios.get(`${this.baseUrl}/sub-category`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    getSubCategoryById = (id) => {\n        return axios.get(`${this.baseUrl}/sub-category/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    createSubCategory = (subCategory) => {\n        return axios.post(`${this.baseUrl}/sub-category`, subCategory, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    deleteSubCategory = (id) => {\n        return axios.delete(`${this.baseUrl}/sub-category/${id}`, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n\n    updateSubCategory = (subCategory) => {\n        return axios.put(`${this.baseUrl}/sub-category/${subCategory.id}`, subCategory, {\n            headers: {\n                'Authorization': sessionStorage.getItem('token')\n            }\n        })\n    }\n}\n\nexport default CategoryService","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n    render() {\n        return (\n            <thead>\n                <tr>\n                    {this.props.columns.map((header, _i) => {\n                        if (typeof this.props.row[header] !== 'object') {\n                            return <th key={`${'table-head-' + header}`}>{header}</th>\n                        }\n                    })}\n                </tr>\n            </thead>\n        )\n    }\n}\n\nclass TableRow extends Component {\n    render() {\n        return (\n            <tr>\n                {this.props.columns.map((field, _i) => {\n                    if (typeof this.props.row[field] !== 'object') {\n                        return <td key={`${'table-cell-' + field}`}>{this.props.row[field]}</td>\n                    }\n                })}\n                {this.props.isImg ? <td><img className=\"table-product-img\" src={\"http://localhost:5005/\" + (this.props.row[this.props.isImg].length ? this.props.row[this.props.isImg][0]['image_path'] : \"\")} /></td> : \"\"}\n            </tr>\n        )\n    }\n}\n\nclass Table extends Component {\n    render() {\n        let component;\n        if (this.props.data && this.props.data.length) {\n            let headers = Object.keys(this.props.data[0])\n            if (this.props.columns) {\n                headers = this.props.columns\n            }\n            component = (<table className={\"table\" + this.props.className}>\n                <TableHeader columns={headers} row={this.props.data[0]} />\n                <tbody>\n                    {this.props.data.map((row, _i) => <TableRow columns={headers} key={`${'table-row-' + _i}`}\n                        row={row} isImg={this.props.isImg}\n                    />)}\n                </tbody>\n            </table>)\n\n        } else {\n            component = <div><strong>Invalid or Empty Data Source</strong></div>\n        }\n\n        return (\n            <div>\n                { component}\n            </div>\n        )\n    }\n}\n\nexport default Table","import Table from '../UI/Table'\n\nexport const ListGroup = (props) => {\n    return (<table className=\"table table-dark bg-dark\">\n        <tbody>\n            {\n                props.data.map((list, _i) => <tr key={'row' + _i}\n                    className={props.cursor === \"true\" ? \" list-group-item--category\" : \"\"}\n                >\n                    <td {...(props.cursor === 'true' ? { onClick: () => props.onListSelect(list.id) } : {})}>{list.id}.</td>\n                    <td>{list.category_id}</td>\n                    <td>{list.name}</td>\n                    <td colSpan=\"2\"><button className=\"btn-sm btn-danger\" onClick={() => props.onDelete(props.isSub, list.id)}>DELETE</button></td>\n                    <td><button className=\"btn-sm btn-info\" onClick={() => props.onEdit(props.isSub, list)}>EDIT</button></td>\n                </tr>)\n            }\n        </tbody>\n    </table>\n    )\n    // return (<Table columns={['id', 'category_id', 'name']} data={props.data} />)\n}","import React, { Component } from 'react'\nimport { Input } from '../UI/Input'\nimport CategoryService from '../../services/category/category'\n\nclass CategoryInput extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            category_id: \"\",\n            name: \"\",\n            id: \"\",\n            parent_id: \"\",\n            validation: {\n                category_id: {\n                    required: true,\n                    minLength: 10,\n                    maxLength: 20,\n                    error: true,\n                    msg: 'Field is required!',\n                    unique: true\n                },\n                name: {\n                    required: true,\n                    minLength: 3,\n                    maxLength: 30,\n                    error: true,\n                    msg: 'Field is required!'\n                }\n            }\n        }\n        this.CategoryService = new CategoryService()\n    }\n\n    componentDidUpdate = (prevProps) => {\n        // console.log(this.props)\n        if ((prevProps.selectedCategory !== this.props.selectedCategory) && !this.props.isSub) {\n            this.setState({ ...this.props.selectedCategory })\n            this.validateAll(this.props.selectedCategory)\n        }\n\n        if ((prevProps.selectedSubCategory !== this.props.selectedSubCategory) && this.props.isSub) {\n            this.setState({ ...this.props.selectedSubCategory })\n            this.validateAll(this.props.selectedSubCategory)\n        }\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n        this.validate(e.target.name, e.target.value)\n    }\n\n    validate = (field, value) => {\n        const tempValidation = this.state.validation\n        if (tempValidation[field].required && value.length === 0) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: 'This field is required!'\n                    }\n                }\n            })\n        } else if ((value.length > tempValidation[field].minLength) && !(value.length < tempValidation[field].maxLength)) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: `The field length should be minimum = ${tempValidation[field].minLength} and maximum = ${tempValidation[field].maxLength}`\n                    }\n                }\n            })\n        } else if (tempValidation[field].unique && this.checkIfUnique(value)) {\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: true,\n                        msg: (this.props.isSub ? \"Sub \" : \"\") + 'Category ID already exist!'\n                    }\n                }\n            })\n        } else {\n            console.log(field, tempValidation[field].required, value.length)\n\n            this.setState({\n                validation: {\n                    ...this.state.validation,\n                    [field]: {\n                        ...this.state.validation[field],\n                        error: false,\n                        msg: ``\n                    }\n                }\n            })\n        }\n\n    }\n\n    checkIfUnique = (id) => {\n        return this.props.data.filter(e => e.category_id === id).length\n    }\n\n    validateAll = (data) => {\n        let tempValidation = { ...this.state.validation }\n        console.log(tempValidation)\n        Object.keys(tempValidation).forEach((field) => {\n            console.log(field)\n            console.log(tempValidation[field])\n            let value = data[field]\n            if (tempValidation[field].required && value.length === 0) {\n                tempValidation = {\n                    ...tempValidation,\n                    [field]: {\n                        ...tempValidation[field],\n                        error: true,\n                        msg: 'This field is required!'\n                    }\n\n                }\n            } else if ((value.length > tempValidation[field].minLength) && !(value.length < tempValidation[field].maxLength)) {\n                tempValidation = {\n                    ...tempValidation,\n                    [field]: {\n                        ...tempValidation[field],\n                        error: true,\n                        msg: `The field length should be minimum = ${tempValidation[field].minLength} and maximum = ${tempValidation[field].maxLength}`\n                    }\n\n                }\n            } else {\n                // console.log(field, tempValidation[field].required, value.length)\n\n                tempValidation = {\n                    ...tempValidation,\n                    [field]: {\n                        ...tempValidation[field],\n                        error: false,\n                        msg: ``\n                    }\n\n                }\n            }\n        })\n\n        this.setState({ validation: tempValidation })\n    }\n\n    isFormValid = () => {\n        let tempValidationObj = { ...this.state.validation }\n        let isValid = []\n        Object.keys(tempValidationObj).forEach((field) => {\n            isValid.push(tempValidationObj[field].error)\n        })\n        return isValid.includes(true)\n    }\n\n    onButtonSave = async () => {\n        let tempObj = {\n            category_id: this.state.category_id,\n            name: this.state.name\n        }\n        if (!this.props.isSub) {\n            if (!this.props.selectedCategory) {\n                const categoryResp = await this.CategoryService.createCategory(tempObj)\n                console.log(categoryResp.data)\n                if (categoryResp.data.success) {\n                    this.props.refreshData()\n                } else {\n                    //TODO\n                }\n            } else {\n                tempObj.id = this.state.id\n                const categoryResp = await this.CategoryService.updateCategory(tempObj)\n                console.log(categoryResp.data)\n                if (categoryResp.data.success) {\n                    this.props.refreshData()\n                } else {\n                    //TODO\n                }\n            }\n\n        } else {\n            tempObj.parent_id = this.props.selectedParent\n            if (!this.props.selectedSubCategory) {\n                const subCategoryResp = await this.CategoryService.createSubCategory(tempObj)\n                console.log(subCategoryResp.data)\n                if (subCategoryResp.data.success) {\n                    this.props.refreshData()\n                } else {\n                    //TODO\n                }\n            } else {\n                tempObj.id = this.state.id\n                const subCategoryResp = await this.CategoryService.updateSubCategory(tempObj)\n                console.log(subCategoryResp.data)\n                if (subCategoryResp.data.success) {\n                    this.props.refreshData()\n                } else {\n                    //TODO\n                }\n            }\n\n        }\n    }\n\n    onButtonClear = () => {\n        let tempValidationObj = { ...this.state.validation }\n\n        Object.keys(tempValidationObj).forEach((field) => {\n            if (tempValidationObj[field].required) {\n                tempValidationObj[field].error = true\n                tempValidationObj[field].msg = 'Field is required!'\n            } else {\n                tempValidationObj[field].msg = ''\n            }\n        })\n\n        this.setState({ category_id: \"\", name: \"\" })\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Input label={(this.props.isSub ? \"Sub \" : \"\") + \"Category Id\"} name=\"category_id\" value={this.state.category_id} type=\"text\"\n                    isValid={this.state.validation.category_id.error} msg={this.state.validation.category_id.msg}\n                    handleChange={this.onInputChange}\n                />\n                <Input label={(this.props.isSub ? \"Sub \" : \"\") + \"Category Name\"} name=\"name\" value={this.state.name} type=\"text\"\n                    isValid={this.state.validation.name.error} msg={this.state.validation.name.msg}\n                    handleChange={this.onInputChange}\n                />\n                <button className=\"btn btn-primary mr-2\" onClick={this.onButtonSave} disabled={this.isFormValid()} >\n                    {(this.props.selectedCategory || this.props.selectedSubCategory) ? \"Update\" : \"Save\"}\n                </button>\n                <button className=\"btn btn-warning mr-2\" onClick={this.onButtonClear} >Clear</button>\n\n            </div>\n        )\n    }\n}\n\nexport default CategoryInput","import React from 'react'\n\nexport default (props) => {\n    return (\n        <div className={(props.type === 'success' ? \" alert alert-success\" : \"alert alert-danger\") + (props.show ? \"\" : \" d-none\") + \" mt-5\"}>\n            {props.message}\n        </div>\n    )\n}","import { Component } from 'react'\nimport CategoryService from '../../services/category/category'\nimport { ListGroup } from '../UI/CategoryListGroup'\nimport CategoryInput from './CategoryInput'\nimport Alert from '../UI/Alert'\n\nclass Category extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            categories: [],\n            subCategories: [],\n            filteredCategories: [],\n            selectedParent: false,\n            responseType: '',\n            responseMessage: '',\n            alertToggeled: false,\n            selectedCategory: false,\n            selectedSubCategory: false,\n            deleteCategory: false,\n            deletedSubCategory: false\n        }\n        this.CategoryService = new CategoryService()\n    }\n\n    componentDidMount = () => {\n        this.getCategories()\n    }\n\n    getCategories = async () => {\n        const categoyResp = await this.CategoryService.getCategories()\n        if (categoyResp.data.success) {\n            const categories = categoyResp.data.data\n            this.setState({ categories, responseType: 'success', responseMessage: categoyResp.data.msg })\n            this.toggleAlert()\n        } else {\n            this.setState({ responseType: 'danger', responseMessage: categoyResp.data.msg })\n            this.toggleAlert()\n        }\n\n        const subCategoyResp = await this.CategoryService.getSubCategories()\n        if (subCategoyResp.data.success) {\n            const subCategories = subCategoyResp.data.data\n            this.setState({ subCategories, responseType: 'success', responseMessage: categoyResp.data.msg })\n            this.toggleAlert()\n        } else {\n            this.setState({ responseType: 'danger', responseMessage: categoyResp.data.msg })\n            this.toggleAlert()\n        }\n\n\n        if (this.state.selectedParent) {\n            this.onCategorySelect(this.state.selectedParent)\n        }\n    }\n\n    onCategorySelect = (parent_id) => {\n        const filteredCategories = this.state.subCategories.filter(subCat => subCat.parent_id === parent_id)\n        this.setState({ filteredCategories, selectedParent: parent_id })\n    }\n\n    toggleAlert = () => {\n        this.setState({ alertToggeled: true })\n        setTimeout(() => {\n            this.setState({ alertToggeled: false })\n        }, 2500)\n    }\n\n    onHandleEdit = async (isSub, updatedRow) => {\n        if (!isSub) {\n            this.setState({ selectedCategory: { ...updatedRow } })\n        } else {\n            this.setState({ selectedSubCategory: { ...updatedRow } })\n        }\n\n    }\n\n    onHandleDelete = async (isSub, id) => {\n        console.log(isSub, id)\n        if (!isSub) {\n            this.setState({ deleteCategory: id })\n            await this.CategoryService.deleteCategory(id)\n            this.getCategories()\n        } else {\n            this.setState({ deletedSubCategory: id })\n            await this.CategoryService.deleteSubCategory(id)\n            this.getCategories()\n        }\n    }\n\n    render() {\n        let subClass = \" d-none\"\n        if (this.state.selectedParent) subClass = \"\"\n        return (\n            <div className='container-fluid'>\n                <div className=\"row\">\n                    <div className=\"col-sm-2 mt-3\">\n                        <CategoryInput isSub={false} selectedCategory={this.state.selectedCategory}\n                            selectedParent={this.state.selectedParent} refreshData={this.getCategories}\n                            data={this.state.categories}\n                        />\n                    </div>\n                    <div className=\"col text-center\">\n                        <h2>Categories</h2>\n                        <ListGroup isSub={false} data={this.state.categories} cursor=\"true\" onListSelect={this.onCategorySelect}\n                            onEdit={this.onHandleEdit} onDelete={this.onHandleDelete} />\n                    </div>\n                    <div className={\"col text-center\" + subClass}>\n                        <h2>Sub Categories</h2>\n                        <ListGroup isSub={true} data={this.state.filteredCategories} cursor=\"false\"\n                            onEdit={this.onHandleEdit} onDelete={this.onHandleDelete} />\n                    </div>\n                    <div className={\"col-sm-2 mt-3\" + subClass}>\n                        <CategoryInput isSub={true} selectedSubCategory={this.state.selectedSubCategory}\n                            selectedParent={this.state.selectedParent} refreshData={this.getCategories}\n                            data={this.state.subCategories}\n                        />\n                    </div>\n                </div>\n                <Alert type={this.state.responseType} message={this.state.responseMessage} show={this.state.alertToggeled} />\n            </div>\n        )\n    }\n}\n\nexport default Category","import { Route, Link, Redirect, Switch } from 'react-router-dom';\nimport Product from \"./component/product/Product\"\nimport ProductTable from \"./component/product/ProductTableSaga\"\nimport ProductList from \"./component/product/ProductList\"\nimport Home from \"./component/Home\"\nimport Registration from './component/user/Registration'\nimport Login from './component/user/Login'\nimport Category from './component/category/Category'\n\nexport const Routes = () => {\n\n    const auth = sessionStorage.getItem('token')\n    const role = sessionStorage.getItem('role')\n\n    if (auth && role === 'admin') {\n        return (<Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/products\" component={ProductTable}></Route>\n            <Route exact path=\"/category\" component={Category}></Route>\n            <Route exact path=\"/product\" component={Product}></Route>\n            <Redirect to=\"/\"></Redirect>\n        </Switch>)\n    } if (auth && role === 'customer') {\n        return (<Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/products\" component={ProductTable}></Route>\n            <Redirect to=\"/\"></Redirect>\n        </Switch>)\n    } else {\n        return (<Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/products\" component={ProductTable}></Route>\n            <Route exact path=\"/signup\" component={Registration}></Route>\n            <Route exact path=\"/login\" component={Login}></Route>\n            <Redirect to=\"/\"></Redirect>\n        </Switch>)\n    }\n}","import { Base } from './component/UI/layout/Base'\nimport Home from './component/Home'\nimport { Routes } from './routes'\n\nfunction App() {\n\n  return (\n    <Base>\n      <Routes />\n    </Base>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Product from '../../component/product/Product'\nimport * as actions from '../actions/products.actions'\n\nconst initialState = {\n    products: [],\n    filteredProducts: [],\n    selectedProducts: {},\n    searchText: \"\",\n    result: {}\n}\n\nexport const productReducer = (state = initialState, action) => {\n    switch (action.type) {\n        // case actions.UPDATE_PRODUCTS: {\n\n        // }\n\n        // case actions.DELETE_PRODUCTS: {\n\n        // }\n\n        case actions.SEARCH_PRODUCT: {\n            console.log(action.searchText)\n            return {\n                ...state,\n                filteredProducts: [...state.products.filter((product) => {\n                    return Object.keys(product).map((field) => {\n                        if (typeof product[field] === 'string') {\n                            return product[field].toLowerCase().includes(action.searchText.toLowerCase())\n                        }\n                    }).includes(true)\n                })]\n            }\n        }\n\n        case actions.FETCH_PRODUCT_SUCCESS: {\n            console.log('FETCH_PRODUCT_SUCCESS', action)\n            return {\n                ...state,\n                products: action.products,\n                result: {\n                    sucess: true,\n                    msg: action.msg\n                }\n            }\n        }\n\n        case actions.FETCH_PRODUCT_FAILED: {\n            return {\n                ...state,\n                result: {\n                    sucess: false,\n                    msg: action.msg\n                }\n            }\n        }\n\n        case actions.ADD_PRODUCT_SUCCESS: {\n            return {\n                ...state,\n                result: {\n                    record: action.product,\n                    sucess: true,\n                    msg: action.msg\n                }\n            }\n        }\n\n        case actions.ADD_PRODUCT_FAILED: {\n            return {\n                ...state,\n                result: {\n                    sucess: false,\n                    msg: action.msg\n                }\n            }\n        }\n\n        default: {\n            return state\n        }\n    }\n}\n\n","import { combineReducers } from 'redux'\nimport { productReducer } from './product.reducer'\n\nexport const rootReducer = combineReducers({\n    products: productReducer\n})","import { takeLatest, all, call, put } from 'redux-saga/effects'\nimport actions from '../actions/actions'\nimport ProductService from '../../services/product'\n\nconst productService = new ProductService()\n\n\n/* START get products */\nasync function getProduct() {\n    const result = await productService.getProducts()\n    return result\n}\n\nfunction* dispatchGetProducts() {\n    const response = yield call(getProduct)\n    // console.log(response)\n    if (response.data.success) {\n        yield put({\n            type: actions.FETCH_PRODUCT_SUCCESS,\n            products: response.data.data,\n            msg: response.data.msg\n        })\n    } else {\n        yield put({\n            type: actions.FETCH_PRODUCT_FAILED,\n            msg: response.data.msg\n        })\n    }\n}\n\nfunction* listenGetProducts() {\n    yield takeLatest(actions.GET_PRODUCTS, dispatchGetProducts)\n}\n/* END get products */\n\n/* START add product */\nasync function addProduct(product) {\n    const result = await productService.createProduct(product)\n    return result\n}\n\nfunction* dispatchAddProduct(action) {\n    const response = yield call(addProduct, action.payload)\n    if (response.data.success) {\n        yield put({\n            type: actions.ADD_PRODUCT_SUCCESS,\n            products: response.data.data,\n            msg: response.data.msg\n        })\n    } else {\n        yield put({\n            type: actions.ADD_PRODUCT_FAILED,\n            msg: response.data.msg\n        })\n    }\n}\n\nfunction* listenAddProduct() {\n    yield takeLatest(actions.ADD_PRODUCT, dispatchAddProduct)\n}\n/* END add product */\n\n\n\nexport default function* productSaga() {\n    yield all([listenGetProducts(), listenAddProduct()])\n}","import { createStore, applyMiddleware, compose } from 'redux'\nimport { rootReducer } from './reducers/reducers'\nimport createSagaMiddleware from 'redux-saga'\nimport productSaga from './sagas/product.saga'\n\nconst parameterEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst sagaMiddleware = createSagaMiddleware()\nlet store = createStore(rootReducer, parameterEnhancer(applyMiddleware(sagaMiddleware)))\n\nsagaMiddleware.run(productSaga)\n\nexport default store\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}